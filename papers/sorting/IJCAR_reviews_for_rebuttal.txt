Dear Peter Lammich,

Thank you for your submission to IJCAR 2020. The IJCAR 2020
rebuttal period will be between March 9 and March 12 (AoE).

During this time, you will have access to the current state of
your reviews and have the opportunity to submit a response.
Please keep in mind the following during this
process:

* The response must focus on any factual errors in the reviews
and any questions posed by the reviewers. It must not provide
new research results or reformulate the presentation. Try to be
as concise and to the point as possible.

* The rebuttal period is an opportunity to react to the
reviews, but not a requirement to do so. Thus, if you feel the
reviews are accurate and the reviewers have not asked any
questions, then you do not have to respond.

* The reviews are as submitted by the PC members, without any
coordination between them. Thus, there may be inconsistencies.
Furthermore, these are not the final versions of the reviews.
The reviews can later be updated to take into account the
discussions at the program committee meeting, and we may find
it necessary to solicit other outside reviews after the
rebuttal period.

* The program committee will read your responses carefully and
take this information into account during the discussions. On
the other hand, the program committee will not directly respond
to your responses, either before the program committee meeting
or in the final versions of the reviews.

* Your response will be seen by all PC members who have access
to the discussion of your paper, so please try to be polite and
constructive.

The reviews on your paper are attached to this letter. To
submit your response you should log on the EasyChair Web page
for IJCAR 2020 and select your submission on the menu.

----------------------- REVIEW 1 ---------------------
SUBMISSION: 128
TITLE: Efficient Verified Implementation of Introsort and Pdqsort
AUTHORS: Peter Lammich

----------- Overall evaluation -----------
SCORE: 2 (accept)
----- TEXT:
The paper presents an application of the Isabelle-LLVM framework: two state-of-the-art sorting algorithms (i.e., Introsort and Pdqsort) have been formally verified in the Isabelle/HOL theorem prover. The notable feature of this verification effort is that the verified algorithms can be extracted to LLVM representations, and further compiled to machine code that shows competitive performance against highly optimised implementations in the GNU C++ Standard Library. The performance is marvellous since most of the time the extracted code from a theorem prover (which is usually in a functional language) is several orders of magnitude slower than an optimised C/C++ implementations. Therefore, I believe this work is of significant importance.

The paper is well written and easy to follow. Both the proofs and the benchmark can be easily accessed online. Overall, I don't have any complaint against this paper and wish to see more follow-ups of the Isabelle-LLVM framework.


----------------------- REVIEW 2 ---------------------
SUBMISSION: 128
TITLE: Efficient Verified Implementation of Introsort and Pdqsort
AUTHORS: Peter Lammich

----------- Overall evaluation -----------
SCORE: 2 (accept)
----- TEXT:
The paper presents a verification effort for some sorting algorithms that are used in practice in C++ libraries.  The algorithms are non-trivial, and algorithms of the same kind have had many bugs in the past.  The paper can also be seen as a case study for the Isabelle Refinement Framework (by the same author).  After verification in the Isabelle Framework, the algorithms are translated to LLVM using the Isabelle-LLVM framework (also by the same author).  The generated algorithms (which are verified down to the LLVM level) behave on par with the implementations provided in libraries.

The paper is very clearly written.  It is a case study, but the author has chosen the right level of abstraction to explain the verification process and the tools used.  The results are nice, exhaustive, and convincingly presented.  My sole concern about the paper is that it is basically a case study for tools previously published.  This is however afaik the first proper case study, so I believe the paper should be accepted to IJCAR.

Minor comments:

p2.  Isn't the pivot generally left out of the recursive call?  In line 11, Algo 1, it seems it is also sorted in the second recursive call.

p2. Notation l..<h is maybe unconventional, maybe explain in a few words?

p3 : ...which leaves the pivot-element as first element of the left partition.  Could you recheck?

p3, Algo 2.  Maybe the arguments of PDQSORT on line 1 are just a cut and paste of line 3: lm and d are unused in this function.

p4. the the threshold

p8. It seems notation for assert and spec changed.  There might be a good reason, but if not, fix.

p9. The the Sepref

p14. The explanation of Fig 2. could probably made simpler to understand

p13. person hours are interesting, but lines of code would also be of interest


----------------------- REVIEW 3 ---------------------
SUBMISSION: 128
TITLE: Efficient Verified Implementation of Introsort and Pdqsort
AUTHORS: Peter Lammich

----------- Overall evaluation -----------
SCORE: 1 (weak accept)
----- TEXT:
The verification of sorting algorithms that are close to actual
implementation is fiendishly difficult. The paper manages to verify
in Isabelle/HOL the Introsort and Pdqsort algorithms, which are both
part of C++ libraries. The idea is to implement abstract functions
in Isabelle/HOL and then refine them to LLVM code. This produces
code that is correct but can also be run against benchmarks (and
it turns out the code is rather competitive). The verification is
aided by Isabelle-LLVM framework. This work is a good datapoint
for the formal verification of implemented algorithms (as opposed to
idealised algorithms shown in textbooks). I therefore recommend the
acceptance of the paper.

A slight let-down of the paper is that it assumes quite a bit of background
knowledge of the Isabelle-LLVM framework. References are given, which
is appreciated. A longer version of the paper might make the material
more "stand-alone".


------------------------------------------------------

Best wishes,

Nicolas Peltier
Viorica Sofronie-Stokkermans
