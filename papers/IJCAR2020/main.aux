\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{libstdc++}
\citation{Muss97}
\citation{boost}
\citation{pdqsort}
\citation{Peters02}
\citation{GRBBH15}
\citation{bs_flaw_blogpost}
\citation{libc++}
\citation{LLVM-manual}
\citation{LaTu12}
\citation{La19-llvm}
\@writefile{toc}{\contentsline {title}{Efficient Verified Implementation of Introsort and Pdqsort}{1}{chapter.1}}
\@writefile{toc}{\authcount {1}}
\@writefile{toc}{\contentsline {author}{Peter Lammich}{1}{chapter.1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1.1}}
\citation{GRBBH15,BSSU17}
\citation{Muss97}
\citation{Hoare61}
\citation{Will64}
\citation{libstdc++}
\@writefile{toc}{\contentsline {section}{\numberline {2}The Introsort and Pdqsort Algorithms}{2}{section.1.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{l:intrs:trivial}{{2}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:aux}{{3}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:finalis}{{4}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:threshold}{{6}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:heapsort}{{7}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:part}{{9}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:rec1}{{10}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\newlabel{l:intrs:rec2}{{11}{2}{The Introsort and Pdqsort Algorithms}{section.1.2}{}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Introsort\relax }}{2}{algorithm.1}}
\newlabel{alg:introsort}{{1}{2}{Introsort\relax }{algorithm.1}{}}
\newlabel{l:pdq:aux}{{2}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:threshold}{{4}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:pivotfront}{{6}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:eqopt}{{7}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:partleft}{{8}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:assert}{{9}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:recright}{{10}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:part}{{12}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:unbal}{{13}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:heapsort}{{14}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:shuffle}{{15}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:maybe}{{17}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:rec1}{{18}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\newlabel{l:pdq:rec2}{{19}{3}{The Introsort and Pdqsort Algorithms}{algorithm.1}{}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Pdqsort\relax }}{3}{algorithm.2}}
\newlabel{alg:pdqsort}{{2}{3}{Pdqsort\relax }{algorithm.2}{}}
\citation{boost}
\citation{EdWe16}
\citation{Bent93}
\citation{LaTu12,La19-llvm}
\citation{LLVM-manual}
\@writefile{toc}{\contentsline {section}{\numberline {3}Verification}{4}{section.1.3}}
\citation{Kr10}
\citation{Josu12}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Specification of Sorting Algorithms}{5}{subsection.1.3.1}}
\newlabel{sec:sortspec}{{3.1}{5}{Specification of Sorting Algorithms}{subsection.1.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Quicksort Scheme}{5}{subsection.1.3.2}}
\citation{EdWe16}
\newlabel{thm:sorting_correct}{{1}{7}{Quicksort Scheme}{theorem.1.3.1}{}}
\newlabel{alg:insert:loophead}{{9}{7}{Quicksort Scheme}{lstnumber.-11.2}{}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {3}{\ignorespaces Insertion Sort\relax }}{7}{algorithm.3}}
\newlabel{alg:insort}{{3}{7}{Insertion Sort\relax }{algorithm.3}{}}
\citation{LaWi19-IMP2,Gri19-AFP,La16}
\citation{CLRS09}
\citation{SeWa11}
\citation{La19-llvm}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Insertion Sort}{8}{subsection.1.3.3}}
\newlabel{sec:insort}{{3.3}{8}{Insertion Sort}{subsection.1.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}The Remaining Subroutines}{8}{subsection.1.3.4}}
\citation{La15,La19-llvm}
\citation{La15,La19-llvm}
\@writefile{loa}{\contentsline {algorithm}{\numberline {4}{\ignorespaces The standard (left) and optimized (right) sift-down function.\relax }}{9}{algorithm.4}}
\newlabel{alg:sift_down}{{4}{9}{The standard (left) and optimized (right) sift-down function.\relax }{algorithm.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Imperative Implementation}{9}{section.1.4}}
\newlabel{sec:imp_impl}{{4}{9}{Imperative Implementation}{section.1.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}The Sepref Tool}{9}{subsection.1.4.1}}
\citation{Rey02,CHY07}
\citation{La15}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Implementation of the \textsc  {insert} procedure for 64bit unsigned integer elements and \lstinline [language=isabelle]{G=false}, which is generated by the Sepref tool. This definition lies within the executable fragment of Isabelle-LLVM, i.e., the Isabelle LLVM code generator can translate it to LLVM intermediate representation. Note that the function does not depend on the lower bound parameter \lstinline [language=isabelle]$l$ any more, as this was only required in the guarded version. Inlining will remove this bogus parameter. \relax }}{10}{figure.caption.2}}
\newlabel{fig:ug_insort_isa_llvm}{{1}{10}{Implementation of the \textsc {insert} procedure for 64bit unsigned integer elements and \is {G=false}, which is generated by the Sepref tool. This definition lies within the executable fragment of Isabelle-LLVM, i.e., the Isabelle LLVM code generator can translate it to LLVM intermediate representation. Note that the function does not depend on the lower bound parameter \is $l$ any more, as this was only required in the guarded version. Inlining will remove this bogus parameter. \relax }{figure.caption.2}{}}
\citation{La19-llvm}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Separation Logic and Ownership}{11}{subsection.1.4.2}}
\citation{Bent93}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}The Isabelle-LLVM Code Generator}{12}{subsection.1.4.3}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Benchmarks}{12}{section.1.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Benchmarking our verified implementations against the unverified originals. For each element type, machine, and distribution, the value $(t_1/t_2-1)*s$ is shown, where $t_1$ is the slower time, $t_2$ is the faster time, and $s = 100$ if our implementation is slower, and $s=-100$ if the original implementation is slower. That is, a positive value $p$ indicates that our implementation is slower, requiring $100+p$ percent of the run time of the original. Analogously, a negative value $-p$ means that the original implementation is slower, requiring $100+p$ percent of our implementation's run time. \relax }}{13}{figure.caption.3}}
\newlabel{fig:benchres}{{2}{13}{Benchmarking our verified implementations against the unverified originals. For each element type, machine, and distribution, the value $(t_1/t_2-1)*s$ is shown, where $t_1$ is the slower time, $t_2$ is the faster time, and $s = 100$ if our implementation is slower, and $s=-100$ if the original implementation is slower. That is, a positive value $p$ indicates that our implementation is slower, requiring $100+p$ percent of the run time of the original. Analogously, a negative value $-p$ means that the original implementation is slower, requiring $100+p$ percent of our implementation's run time. \relax }{figure.caption.3}{}}
\citation{GRBBH15,BSSU17}
\citation{La19-llvm}
\citation{BHS07}
\citation{FBL18}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusions}{14}{section.1.6}}
\citation{FoHoa71}
\citation{FiMa99}
\citation{GRBBH15}
\citation{BSSU17}
\citation{EdWe16}
\citation{HaLa19}
\citation{rustlang}
\citation{BCOP05}
\bibstyle{abbrv}
\bibdata{bib}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Related Work}{15}{subsection.1.6.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Future Work}{15}{subsection.1.6.2}}
\@writefile{toc}{\contentsline {paragraph}{Acknowledgements}{15}{section*.4}}
\bibcite{Will64}{{1}{}{{}}{{}}}
\bibcite{BHS07}{{2}{}{{}}{{}}}
\bibcite{BSSU17}{{3}{}{{}}{{}}}
\bibcite{Bent93}{{4}{}{{}}{{}}}
\bibcite{bs_flaw_blogpost}{{5}{}{{}}{{}}}
\bibcite{boost}{{6}{}{{}}{{}}}
\bibcite{BCOP05}{{7}{}{{}}{{}}}
\bibcite{CHY07}{{8}{}{{}}{{}}}
\bibcite{CLRS09}{{9}{}{{}}{{}}}
\bibcite{GRBBH15}{{10}{}{{}}{{}}}
\bibcite{EdWe16}{{11}{}{{}}{{}}}
\bibcite{FiMa99}{{12}{}{{}}{{}}}
\bibcite{FBL18}{{13}{}{{}}{{}}}
\bibcite{FoHoa71}{{14}{}{{}}{{}}}
\bibcite{libstdc++}{{15}{}{{}}{{}}}
\bibcite{Gri19-AFP}{{16}{}{{}}{{}}}
\bibcite{HaLa19}{{17}{}{{}}{{}}}
\bibcite{Hoare61}{{18}{}{{}}{{}}}
\bibcite{Josu12}{{19}{}{{}}{{}}}
\bibcite{Kr10}{{20}{}{{}}{{}}}
\bibcite{La15}{{21}{}{{}}{{}}}
\bibcite{La16}{{22}{}{{}}{{}}}
\bibcite{La19-llvm}{{23}{}{{}}{{}}}
\bibcite{LaTu12}{{24}{}{{}}{{}}}
\bibcite{LaWi19-IMP2}{{25}{}{{}}{{}}}
\bibcite{libc++}{{26}{}{{}}{{}}}
\bibcite{LLVM-manual}{{27}{}{{}}{{}}}
\bibcite{Muss97}{{28}{}{{}}{{}}}
\bibcite{pdqsort}{{29}{}{{}}{{}}}
\bibcite{Peters02}{{30}{}{{}}{{}}}
\bibcite{Rey02}{{31}{}{{}}{{}}}
\bibcite{rustlang}{{32}{}{{}}{{}}}
\bibcite{SeWa11}{{33}{}{{}}{{}}}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
