\begin{thebibliography}{10}

\bibitem{Will64}
Algorithm 232: Heapsort.
\newblock {\em Commun. ACM}, 7(6):347--349, June 1964.

\bibitem{BHS07}
B.~Beckert, R.~H\"{a}hnle, and P.~H. Schmitt.
\newblock {\em Verification of Object-oriented Software: The KeY Approach}.
\newblock Springer-Verlag, Berlin, Heidelberg, 2007.

\bibitem{BSSU17}
B.~Beckert, J.~Schiffl, P.~H. Schmitt, and M.~Ulbrich.
\newblock Proving jdk's dual pivot quicksort correct.
\newblock In {\em VSTTE}, 2017.

\bibitem{Bent93}
J.~L. Bentley and M.~D. McIlroy.
\newblock Engineering a sort function.
\newblock {\em Softw. Pract. Exper.}, 23(11):1249--1265, Nov. 1993.

\bibitem{bs_flaw_blogpost}
J.~Bloch.
\newblock Extra, extra - read all about it: Nearly all binary searches and
  mergesorts are broken.

\bibitem{boost}
Boost {C++} libraries.

\bibitem{BCOP05}
R.~Bornat, C.~Calcagno, P.~O'Hearn, and M.~Parkinson.
\newblock Permission accounting in separation logic.
\newblock In {\em Proceedings of the 32Nd ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages}, POPL '05, pages 259--270, New York, NY,
  USA, 2005. ACM.

\bibitem{CHY07}
C.~Calcagno, P.~O'Hearn, and H.~Yang.
\newblock Local action and abstract separation logic.
\newblock In {\em LICS 2007}, pages 366--378, July 2007.

\bibitem{CLRS09}
T.~H. Cormen, C.~E. Leiserson, R.~L. Rivest, and C.~Stein.
\newblock {\em Introduction to Algorithms, Third Edition}.
\newblock The MIT Press, 3rd edition, 2009.

\bibitem{GRBBH15}
S.~de~Gouw, J.~Rot, F.~S. de~Boer, R.~Bubel, and R.~H{\"a}hnle.
\newblock Openjdk's java.utils.collection.sort() is broken: The good, the bad
  and the worst case.
\newblock In {\em CAV}, 2015.

\bibitem{EdWe16}
S.~Edelkamp and A.~Wei{\ss}.
\newblock Blockquicksort: How branch mispredictions don't affect quicksort.
\newblock {\em CoRR}, abs/1604.06697, 2016.

\bibitem{FiMa99}
J.-C. Filli{\^a}tre and N.~Magaud.
\newblock Certification of sorting algorithms in the coq system.
\newblock 1999.

\bibitem{FBL18}
M.~Fleury, J.~C. Blanchette, and P.~Lammich.
\newblock A verified {SAT} solver with watched literals using {Imperative}
  {HOL}.
\newblock In {\em Proc. of CPP}, pages 158--171, 2018.

\bibitem{FoHoa71}
M.~Foley and C.~A.~R. Hoare.
\newblock {Proof of a recursive program: Quicksort}.
\newblock {\em The Computer Journal}, 14(4):391--395, 01 1971.

\bibitem{libstdc++}
The {GNU} {C++} library.
\newblock Version 7.4.0.

\bibitem{Gri19-AFP}
S.~Griebel.
\newblock Binary heaps for imp2.
\newblock {\em Archive of Formal Proofs}, June 2019.
\newblock \url{http://isa-afp.org/entries/IMP2_Binary_Heap.html}, Formal proof
  development.

\bibitem{HaLa19}
M.~Haslbeck and P.~Lammich.
\newblock Refinement with time – refining the run-time of algorithms in
  isabelle/hol.
\newblock In {\em ITP2019: Interactive Theorem Proving}, 6 2019.

\bibitem{Hoare61}
C.~A.~R. Hoare.
\newblock Algorithm 64: Quicksort.
\newblock {\em Commun. ACM}, 4(7):321--, July 1961.

\bibitem{Josu12}
N.~M. Josuttis.
\newblock {\em The C++ Standard Library: A Tutorial and Reference}.
\newblock Addison-Wesley Professional, 2nd edition, 2012.

\bibitem{Kr10}
A.~Krauss.
\newblock Recursive definitions of monadic functions.
\newblock In {\em Proc. of PAR}, volume~43, pages 1--13, 2010.

\bibitem{La15}
P.~Lammich.
\newblock Refinement to {Imperative/HOL}.
\newblock In {\em ITP}, volume 9236 of {\em LNCS}, pages 253--269. Springer,
  2015.

\bibitem{La16}
P.~Lammich.
\newblock Refinement based verification of imperative data structures.
\newblock In J.~Avigad and A.~Chlipala, editors, {\em {CPP} 2016}, pages
  27--36. {ACM}, 2016.

\bibitem{La19-llvm}
P.~Lammich.
\newblock {Generating Verified LLVM from Isabelle/HOL}.
\newblock In J.~Harrison, J.~O'Leary, and A.~Tolmach, editors, {\em 10th
  International Conference on Interactive Theorem Proving (ITP 2019)}, volume
  141 of {\em Leibniz International Proceedings in Informatics (LIPIcs)}, pages
  22:1--22:19, Dagstuhl, Germany, 2019. Schloss Dagstuhl--Leibniz-Zentrum fuer
  Informatik.

\bibitem{LaTu12}
P.~Lammich and T.~Tuerk.
\newblock Applying data refinement for monadic programs to {H}opcroft's
  algorithm.
\newblock In L.~Beringer and A.~P. Felty, editors, {\em ITP 2012}, volume 7406
  of {\em {LNCS}}, pages 166--182. Springer, 2012.

\bibitem{LaWi19-IMP2}
P.~Lammich and S.~Wimmer.
\newblock Imp2 – simple program verification in isabelle/hol.
\newblock {\em Archive of Formal Proofs}, Jan. 2019.
\newblock \url{http://isa-afp.org/entries/IMP2.html}, Formal proof development.

\bibitem{libc++}
"libc++" c++ standard library.

\bibitem{LLVM-manual}
{LLVM} language reference manual.

\bibitem{Muss97}
D.~R. MUSSER.
\newblock Introspective sorting and selection algorithms.
\newblock {\em Software: Practice and Experience}, 27(8):983--993, 1997.

\bibitem{pdqsort}
Pattern-defeating quicksort.

\bibitem{Peters02}
T.~Peters.
\newblock Original description of timsort.
\newblock Accessed 2019-10-21.

\bibitem{Rey02}
J.~C. Reynolds.
\newblock Separation logic: A logic for shared mutable data structures.
\newblock In {\em Proc of. Logic in Computer Science (LICS)}, pages 55--74.
  IEEE, 2002.

\bibitem{rustlang}
The rust programmin language.

\bibitem{SeWa11}
R.~Sedgewick and K.~Wayne.
\newblock {\em Algorithms}.
\newblock Addison-Wesley Professional, 4th edition, 2011.

\end{thebibliography}
