class CARD_1:
  supersort: finite
  instances:
    1 :: CARD_1

class Gcd:
  supersort: gcd
  parameters:
    Gcd :: 'a set \<Rightarrow> 'a
    Lcm :: 'a set \<Rightarrow> 'a
  instances:
    int :: Gcd
    nat :: Gcd

class Inf:
  supersort: type
  parameters:
    Inf :: 'a set \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: Inf
    Enum.finite_2 :: Inf
    Enum.finite_3 :: Inf
    Enum.finite_4 :: Inf
    Enum.finite_5 :: Inf
    Predicate.pred :: (type) Inf
    bool :: Inf
    dres :: (type) Inf
    filter :: (type) Inf
    fun :: (type, Inf) Inf
    int :: Inf
    multiset :: (type) Inf
    nat :: Inf
    nres :: (type) Inf
    option :: (complete_lattice) Inf
    real :: Inf
    set :: (type) Inf
    unit :: Inf

class Sup:
  supersort: type
  parameters:
    Sup :: 'a set \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: Sup
    Enum.finite_2 :: Sup
    Enum.finite_3 :: Sup
    Enum.finite_4 :: Sup
    Enum.finite_5 :: Sup
    Predicate.pred :: (type) Sup
    bool :: Sup
    dres :: (type) Sup
    filter :: (type) Sup
    fun :: (type, Sup) Sup
    int :: Sup
    multiset :: (type) Sup
    nat :: Sup
    nres :: (type) Sup
    option :: (complete_lattice) Sup
    real :: Sup
    set :: (type) Sup
    unit :: Sup

class ab_group_add:
  supersort: {cancel_comm_monoid_add,group_add}
  instances:
    Enum.finite_1 :: ab_group_add
    Enum.finite_2 :: ab_group_add
    Enum.finite_3 :: ab_group_add
    bit :: ab_group_add
    bit0 :: (finite) ab_group_add
    bit1 :: (finite) ab_group_add
    complex :: ab_group_add
    int :: ab_group_add
    integer :: ab_group_add
    1 :: ab_group_add
    rat :: ab_group_add
    real :: ab_group_add
    word :: (len0) ab_group_add

class ab_semigroup_add:
  supersort: semigroup_add
  instances:
    Enum.finite_1 :: ab_semigroup_add
    Enum.finite_2 :: ab_semigroup_add
    Enum.finite_3 :: ab_semigroup_add
    bit :: ab_semigroup_add
    bit0 :: (finite) ab_semigroup_add
    bit1 :: (finite) ab_semigroup_add
    complex :: ab_semigroup_add
    int :: ab_semigroup_add
    integer :: ab_semigroup_add
    multiset :: (type) ab_semigroup_add
    nat :: ab_semigroup_add
    natural :: ab_semigroup_add
    1 :: ab_semigroup_add
    rat :: ab_semigroup_add
    real :: ab_semigroup_add
    word :: (len0) ab_semigroup_add

class ab_semigroup_mult:
  supersort: semigroup_mult
  instances:
    Enum.finite_1 :: ab_semigroup_mult
    Enum.finite_2 :: ab_semigroup_mult
    Enum.finite_3 :: ab_semigroup_mult
    bit :: ab_semigroup_mult
    bit0 :: (finite) ab_semigroup_mult
    bit1 :: (finite) ab_semigroup_mult
    complex :: ab_semigroup_mult
    int :: ab_semigroup_mult
    integer :: ab_semigroup_mult
    nat :: ab_semigroup_mult
    natural :: ab_semigroup_mult
    1 :: ab_semigroup_mult
    rat :: ab_semigroup_mult
    real :: ab_semigroup_mult
    word :: (len0) ab_semigroup_mult

class abs:
  supersort: type
  parameters:
    abs :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: abs
    Enum.finite_2 :: abs
    Enum.finite_3 :: abs
    complex :: abs
    int :: abs
    integer :: abs
    rat :: abs
    real :: abs

class abs_if:
  supersort: {abs,minus,uminus,zero,ord}
  instances:
    Enum.finite_1 :: abs_if
    int :: abs_if
    integer :: abs_if
    rat :: abs_if
    real :: abs_if

class addr_algebra:
  supersort: type
  parameters:
    abase :: 'a \<Rightarrow> bool
    acompat :: 'a \<Rightarrow> 'a \<Rightarrow> bool
    adiff :: 'a \<Rightarrow> 'a \<Rightarrow> int
    aidx :: 'a \<Rightarrow> int \<Rightarrow> 'a
  instances:
    addr :: (addr_algebra) addr_algebra
    baddr :: (this_addr) addr_algebra
    llvm_ptr :: addr_algebra
    ptr :: (llvm_rep) addr_algebra
    rptr :: (addr_algebra) addr_algebra

class algebraic_semidom:
  supersort: semidom_divide
  instances:
    Enum.finite_2 :: algebraic_semidom
    Enum.finite_3 :: algebraic_semidom
    int :: algebraic_semidom
    integer :: algebraic_semidom
    nat :: algebraic_semidom
    natural :: algebraic_semidom

class archimedean_field:
  supersort: linordered_field
  instances:
    rat :: archimedean_field
    real :: archimedean_field

class banach:
  supersort: {complete_space,real_normed_vector}
  instances:
    complex :: banach
    real :: banach

class bit_comprehension:
  supersort: bit_operations
  parameters:
    set_bits :: (nat \<Rightarrow> bool) \<Rightarrow> 'a
  instances:
    int :: bit_comprehension
    nat :: bit_comprehension
    natural :: bit_comprehension
    word :: (len0) bit_comprehension

class bit_operations:
  supersort: type
  parameters:
    bitNOT :: 'a \<Rightarrow> 'a
    bitAND :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
    bitOR :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
    bitXOR :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
    shiftl :: 'a \<Rightarrow> nat \<Rightarrow> 'a
    shiftr :: 'a \<Rightarrow> nat \<Rightarrow> 'a
    test_bit :: 'a \<Rightarrow> nat \<Rightarrow> bool
    lsb :: 'a \<Rightarrow> bool
    msb :: 'a \<Rightarrow> bool
    set_bit :: 'a \<Rightarrow> nat \<Rightarrow> bool \<Rightarrow> 'a
  instances:
    bit :: bit_operations
    int :: bit_operations
    lint :: bit_operations
    nat :: bit_operations
    natural :: bit_operations
    word :: (len0) bit_operations

class boolean_algebra:
  supersort: {minus,uminus,bounded_lattice,distrib_lattice}
  instances:
    Enum.finite_1 :: boolean_algebra
    Enum.finite_4 :: boolean_algebra
    Predicate.pred :: (type) boolean_algebra
    bool :: boolean_algebra
    fun :: (type, boolean_algebra) boolean_algebra
    set :: (type) boolean_algebra
    unit :: boolean_algebra

class bot:
  supersort: type
  parameters:
    bot :: 'a
  instances:
    Enum.finite_1 :: bot
    Enum.finite_2 :: bot
    Enum.finite_3 :: bot
    Enum.finite_4 :: bot
    Enum.finite_5 :: bot
    Predicate.pred :: (type) bot
    bool :: bot
    dres :: (type) bot
    filter :: (type) bot
    fun :: (type, bot) bot
    nat :: bot
    nres :: (type) bot
    option :: (order) bot
    set :: (type) bot
    unit :: bot

class bounded_forall:
  supersort: type
  parameters:
    bounded_forall :: ('a \<Rightarrow> bool) \<Rightarrow> natural \<Rightarrow> bool

class bounded_lattice:
  supersort: {bounded_lattice_bot,bounded_lattice_top}
  instances:
    Enum.finite_1 :: bounded_lattice
    Enum.finite_2 :: bounded_lattice
    Enum.finite_3 :: bounded_lattice
    Enum.finite_4 :: bounded_lattice
    Enum.finite_5 :: bounded_lattice
    Predicate.pred :: (type) bounded_lattice
    bool :: bounded_lattice
    dres :: (type) bounded_lattice
    filter :: (type) bounded_lattice
    fun :: (type, bounded_lattice) bounded_lattice
    nres :: (type) bounded_lattice
    option :: (bounded_lattice_top) bounded_lattice
    set :: (type) bounded_lattice
    unit :: bounded_lattice

class bounded_lattice_bot:
  supersort: {bounded_semilattice_sup_bot,lattice}
  instances:
    Enum.finite_1 :: bounded_lattice_bot
    Enum.finite_2 :: bounded_lattice_bot
    Enum.finite_3 :: bounded_lattice_bot
    Enum.finite_4 :: bounded_lattice_bot
    Enum.finite_5 :: bounded_lattice_bot
    Predicate.pred :: (type) bounded_lattice_bot
    bool :: bounded_lattice_bot
    dres :: (type) bounded_lattice_bot
    filter :: (type) bounded_lattice_bot
    fun :: (type, bounded_lattice) bounded_lattice_bot
    nres :: (type) bounded_lattice_bot
    option :: (lattice) bounded_lattice_bot
    set :: (type) bounded_lattice_bot
    unit :: bounded_lattice_bot

class bounded_lattice_top:
  supersort: {bounded_semilattice_inf_top,lattice}
  instances:
    Enum.finite_1 :: bounded_lattice_top
    Enum.finite_2 :: bounded_lattice_top
    Enum.finite_3 :: bounded_lattice_top
    Enum.finite_4 :: bounded_lattice_top
    Enum.finite_5 :: bounded_lattice_top
    Predicate.pred :: (type) bounded_lattice_top
    bool :: bounded_lattice_top
    dres :: (type) bounded_lattice_top
    filter :: (type) bounded_lattice_top
    fun :: (type, bounded_lattice) bounded_lattice_top
    nres :: (type) bounded_lattice_top
    option :: (bounded_lattice_top) bounded_lattice_top
    set :: (type) bounded_lattice_top
    unit :: bounded_lattice_top

class bounded_semilattice_inf_top:
  supersort: {semilattice_inf,order_top}
  instances:
    Enum.finite_1 :: bounded_semilattice_inf_top
    Enum.finite_2 :: bounded_semilattice_inf_top
    Enum.finite_3 :: bounded_semilattice_inf_top
    Enum.finite_4 :: bounded_semilattice_inf_top
    Enum.finite_5 :: bounded_semilattice_inf_top
    Predicate.pred :: (type) bounded_semilattice_inf_top
    bool :: bounded_semilattice_inf_top
    dres :: (type) bounded_semilattice_inf_top
    filter :: (type) bounded_semilattice_inf_top
    fun :: (type, bounded_lattice) bounded_semilattice_inf_top
    nres :: (type) bounded_semilattice_inf_top
    option :: (bounded_lattice_top) bounded_semilattice_inf_top
    set :: (type) bounded_semilattice_inf_top
    unit :: bounded_semilattice_inf_top

class bounded_semilattice_sup_bot:
  supersort: {semilattice_sup,order_bot}
  instances:
    Enum.finite_1 :: bounded_semilattice_sup_bot
    Enum.finite_2 :: bounded_semilattice_sup_bot
    Enum.finite_3 :: bounded_semilattice_sup_bot
    Enum.finite_4 :: bounded_semilattice_sup_bot
    Enum.finite_5 :: bounded_semilattice_sup_bot
    Predicate.pred :: (type) bounded_semilattice_sup_bot
    bool :: bounded_semilattice_sup_bot
    dres :: (type) bounded_semilattice_sup_bot
    filter :: (type) bounded_semilattice_sup_bot
    fun :: (type, bounded_lattice) bounded_semilattice_sup_bot
    nres :: (type) bounded_semilattice_sup_bot
    option :: (lattice) bounded_semilattice_sup_bot
    set :: (type) bounded_semilattice_sup_bot
    unit :: bounded_semilattice_sup_bot

class cancel_ab_semigroup_add:
  supersort: {ab_semigroup_add,cancel_semigroup_add,minus}
  instances:
    Enum.finite_1 :: cancel_ab_semigroup_add
    Enum.finite_2 :: cancel_ab_semigroup_add
    Enum.finite_3 :: cancel_ab_semigroup_add
    bit :: cancel_ab_semigroup_add
    bit0 :: (finite) cancel_ab_semigroup_add
    bit1 :: (finite) cancel_ab_semigroup_add
    complex :: cancel_ab_semigroup_add
    int :: cancel_ab_semigroup_add
    integer :: cancel_ab_semigroup_add
    multiset :: (type) cancel_ab_semigroup_add
    nat :: cancel_ab_semigroup_add
    natural :: cancel_ab_semigroup_add
    1 :: cancel_ab_semigroup_add
    rat :: cancel_ab_semigroup_add
    real :: cancel_ab_semigroup_add
    word :: (len0) cancel_ab_semigroup_add

class cancel_comm_monoid_add:
  supersort: {cancel_ab_semigroup_add,comm_monoid_add}
  instances:
    Enum.finite_1 :: cancel_comm_monoid_add
    Enum.finite_2 :: cancel_comm_monoid_add
    Enum.finite_3 :: cancel_comm_monoid_add
    bit :: cancel_comm_monoid_add
    bit0 :: (finite) cancel_comm_monoid_add
    bit1 :: (finite) cancel_comm_monoid_add
    complex :: cancel_comm_monoid_add
    int :: cancel_comm_monoid_add
    integer :: cancel_comm_monoid_add
    multiset :: (type) cancel_comm_monoid_add
    nat :: cancel_comm_monoid_add
    natural :: cancel_comm_monoid_add
    1 :: cancel_comm_monoid_add
    rat :: cancel_comm_monoid_add
    real :: cancel_comm_monoid_add
    word :: (len0) cancel_comm_monoid_add

class cancel_semigroup_add:
  supersort: semigroup_add
  instances:
    Enum.finite_1 :: cancel_semigroup_add
    Enum.finite_2 :: cancel_semigroup_add
    Enum.finite_3 :: cancel_semigroup_add
    bit :: cancel_semigroup_add
    bit0 :: (finite) cancel_semigroup_add
    bit1 :: (finite) cancel_semigroup_add
    complex :: cancel_semigroup_add
    int :: cancel_semigroup_add
    integer :: cancel_semigroup_add
    multiset :: (type) cancel_semigroup_add
    nat :: cancel_semigroup_add
    natural :: cancel_semigroup_add
    1 :: cancel_semigroup_add
    rat :: cancel_semigroup_add
    real :: cancel_semigroup_add
    word :: (len0) cancel_semigroup_add

class cancellative_sep_algebra:
  supersort: sep_algebra
  instances:
    tsa_opt :: (type) cancellative_sep_algebra

class canonically_ordered_monoid_add:
  supersort: ordered_comm_monoid_add
  instances:
    Enum.finite_1 :: canonically_ordered_monoid_add
    nat :: canonically_ordered_monoid_add

class card2:
  supersort: finite
  instances:
    bit0 :: (finite) card2
    bit1 :: (finite) card2

class card_UNIV:
  supersort: finite_UNIV
  parameters:
    card_UNIV_class.card_UNIV :: ('a, nat) phantom
  instances:
    Enum.finite_1 :: card_UNIV
    Enum.finite_2 :: card_UNIV
    Enum.finite_3 :: card_UNIV
    Enum.finite_4 :: card_UNIV
    Enum.finite_5 :: card_UNIV
    String.literal :: card_UNIV
    bit0 :: ({card_UNIV,finite}) card_UNIV
    bit1 :: ({card_UNIV,finite}) card_UNIV
    bool :: card_UNIV
    char :: card_UNIV
    fun :: (card_UNIV, card_UNIV) card_UNIV
    int :: card_UNIV
    integer :: card_UNIV
    list :: (type) card_UNIV
    nat :: card_UNIV
    natural :: card_UNIV
    0 :: card_UNIV
    1 :: card_UNIV
    option :: (card_UNIV) card_UNIV
    prod :: (card_UNIV, card_UNIV) card_UNIV
    set :: (card_UNIV) card_UNIV
    sum :: (card_UNIV, card_UNIV) card_UNIV
    unit :: card_UNIV

class ccpo:
  supersort: {Sup,order}
  instances:
    Enum.finite_1 :: ccpo
    Enum.finite_2 :: ccpo
    Enum.finite_3 :: ccpo
    Enum.finite_4 :: ccpo
    Enum.finite_5 :: ccpo
    Predicate.pred :: (type) ccpo
    bool :: ccpo
    dres :: (type) ccpo
    filter :: (type) ccpo
    fun :: (type, complete_lattice) ccpo
    nres :: (type) ccpo
    option :: (complete_lattice) ccpo
    set :: (type) ccpo
    unit :: ccpo

class check_all:
  supersort: {term_of,enum}
  parameters:
    check_all_class.check_all :: ('a \<times> (unit \<Rightarrow> term) \<Rightarrow> (bool \<times> term list) option) \<Rightarrow> (bool \<times> term list) option
    check_all_class.enum_term_of :: 'a itself \<Rightarrow> unit \<Rightarrow> term list
  instances:
    Enum.finite_1 :: check_all
    Enum.finite_2 :: check_all
    Enum.finite_3 :: check_all
    Enum.finite_4 :: check_all
    bool :: check_all
    char :: check_all
    fun :: ({equal,check_all}, check_all) check_all
    option :: (check_all) check_all
    prod :: (check_all, check_all) check_all
    set :: (check_all) check_all
    sum :: (check_all, check_all) check_all
    unit :: check_all

class comm_monoid_add:
  supersort: {ab_semigroup_add,monoid_add}
  instances:
    Enum.finite_1 :: comm_monoid_add
    Enum.finite_2 :: comm_monoid_add
    Enum.finite_3 :: comm_monoid_add
    bit :: comm_monoid_add
    bit0 :: (finite) comm_monoid_add
    bit1 :: (finite) comm_monoid_add
    complex :: comm_monoid_add
    int :: comm_monoid_add
    integer :: comm_monoid_add
    multiset :: (type) comm_monoid_add
    nat :: comm_monoid_add
    natural :: comm_monoid_add
    1 :: comm_monoid_add
    rat :: comm_monoid_add
    real :: comm_monoid_add
    word :: (len0) comm_monoid_add

class comm_monoid_diff:
  supersort: cancel_comm_monoid_add
  instances:
    Enum.finite_1 :: comm_monoid_diff
    multiset :: (type) comm_monoid_diff
    nat :: comm_monoid_diff
    natural :: comm_monoid_diff

class comm_monoid_mult:
  supersort: {ab_semigroup_mult,monoid_mult,dvd}
  instances:
    Enum.finite_1 :: comm_monoid_mult
    Enum.finite_2 :: comm_monoid_mult
    Enum.finite_3 :: comm_monoid_mult
    bit :: comm_monoid_mult
    bit0 :: (finite) comm_monoid_mult
    bit1 :: (finite) comm_monoid_mult
    complex :: comm_monoid_mult
    int :: comm_monoid_mult
    integer :: comm_monoid_mult
    nat :: comm_monoid_mult
    natural :: comm_monoid_mult
    1 :: comm_monoid_mult
    rat :: comm_monoid_mult
    real :: comm_monoid_mult
    word :: (len0) comm_monoid_mult

class comm_real_normed_algebra_1:
  supersort: {comm_monoid_mult,real_normed_algebra_1}
  instances:
    complex :: comm_real_normed_algebra_1
    real :: comm_real_normed_algebra_1

class comm_ring:
  supersort: {comm_semiring_0_cancel,ring}
  instances:
    Enum.finite_1 :: comm_ring
    Enum.finite_2 :: comm_ring
    Enum.finite_3 :: comm_ring
    bit :: comm_ring
    bit0 :: (finite) comm_ring
    bit1 :: (finite) comm_ring
    complex :: comm_ring
    int :: comm_ring
    integer :: comm_ring
    1 :: comm_ring
    rat :: comm_ring
    real :: comm_ring
    word :: (len0) comm_ring

class comm_ring_1:
  supersort: {comm_ring,comm_semiring_1_cancel,ring_1}
  instances:
    Enum.finite_2 :: comm_ring_1
    Enum.finite_3 :: comm_ring_1
    bit :: comm_ring_1
    bit0 :: (finite) comm_ring_1
    bit1 :: (finite) comm_ring_1
    complex :: comm_ring_1
    int :: comm_ring_1
    integer :: comm_ring_1
    rat :: comm_ring_1
    real :: comm_ring_1
    word :: (len) comm_ring_1

class comm_semiring:
  supersort: {ab_semigroup_mult,semiring}
  instances:
    Enum.finite_1 :: comm_semiring
    Enum.finite_2 :: comm_semiring
    Enum.finite_3 :: comm_semiring
    bit :: comm_semiring
    bit0 :: (finite) comm_semiring
    bit1 :: (finite) comm_semiring
    complex :: comm_semiring
    int :: comm_semiring
    integer :: comm_semiring
    nat :: comm_semiring
    natural :: comm_semiring
    1 :: comm_semiring
    rat :: comm_semiring
    real :: comm_semiring
    word :: (len0) comm_semiring

class comm_semiring_0:
  supersort: {comm_semiring,semiring_0}
  instances:
    Enum.finite_1 :: comm_semiring_0
    Enum.finite_2 :: comm_semiring_0
    Enum.finite_3 :: comm_semiring_0
    bit :: comm_semiring_0
    bit0 :: (finite) comm_semiring_0
    bit1 :: (finite) comm_semiring_0
    complex :: comm_semiring_0
    int :: comm_semiring_0
    integer :: comm_semiring_0
    nat :: comm_semiring_0
    natural :: comm_semiring_0
    1 :: comm_semiring_0
    rat :: comm_semiring_0
    real :: comm_semiring_0
    word :: (len0) comm_semiring_0

class comm_semiring_0_cancel:
  supersort: {comm_semiring_0,semiring_0_cancel}
  instances:
    Enum.finite_1 :: comm_semiring_0_cancel
    Enum.finite_2 :: comm_semiring_0_cancel
    Enum.finite_3 :: comm_semiring_0_cancel
    bit :: comm_semiring_0_cancel
    bit0 :: (finite) comm_semiring_0_cancel
    bit1 :: (finite) comm_semiring_0_cancel
    complex :: comm_semiring_0_cancel
    int :: comm_semiring_0_cancel
    integer :: comm_semiring_0_cancel
    nat :: comm_semiring_0_cancel
    natural :: comm_semiring_0_cancel
    1 :: comm_semiring_0_cancel
    rat :: comm_semiring_0_cancel
    real :: comm_semiring_0_cancel
    word :: (len0) comm_semiring_0_cancel

class comm_semiring_1:
  supersort: {comm_monoid_mult,comm_semiring_0,semiring_1}
  instances:
    Enum.finite_2 :: comm_semiring_1
    Enum.finite_3 :: comm_semiring_1
    bit :: comm_semiring_1
    bit0 :: (finite) comm_semiring_1
    bit1 :: (finite) comm_semiring_1
    complex :: comm_semiring_1
    int :: comm_semiring_1
    integer :: comm_semiring_1
    nat :: comm_semiring_1
    natural :: comm_semiring_1
    rat :: comm_semiring_1
    real :: comm_semiring_1
    word :: (len) comm_semiring_1

class comm_semiring_1_cancel:
  supersort: {comm_semiring_0_cancel,comm_semiring_1,semiring_1_cancel}
  instances:
    Enum.finite_2 :: comm_semiring_1_cancel
    Enum.finite_3 :: comm_semiring_1_cancel
    bit :: comm_semiring_1_cancel
    bit0 :: (finite) comm_semiring_1_cancel
    bit1 :: (finite) comm_semiring_1_cancel
    complex :: comm_semiring_1_cancel
    int :: comm_semiring_1_cancel
    integer :: comm_semiring_1_cancel
    nat :: comm_semiring_1_cancel
    natural :: comm_semiring_1_cancel
    rat :: comm_semiring_1_cancel
    real :: comm_semiring_1_cancel
    word :: (len) comm_semiring_1_cancel

class comm_semiring_1_cancel_crossproduct:
  supersort: comm_semiring_1_cancel
  instances:
    Enum.finite_2 :: comm_semiring_1_cancel_crossproduct
    Enum.finite_3 :: comm_semiring_1_cancel_crossproduct
    bit :: comm_semiring_1_cancel_crossproduct
    complex :: comm_semiring_1_cancel_crossproduct
    int :: comm_semiring_1_cancel_crossproduct
    integer :: comm_semiring_1_cancel_crossproduct
    nat :: comm_semiring_1_cancel_crossproduct
    rat :: comm_semiring_1_cancel_crossproduct
    real :: comm_semiring_1_cancel_crossproduct

class complete_boolean_algebra:
  supersort: {complete_distrib_lattice,boolean_algebra}
  instances:
    Enum.finite_1 :: complete_boolean_algebra
    Enum.finite_4 :: complete_boolean_algebra
    Predicate.pred :: (type) complete_boolean_algebra
    bool :: complete_boolean_algebra
    fun :: (type, complete_boolean_algebra) complete_boolean_algebra
    set :: (type) complete_boolean_algebra
    unit :: complete_boolean_algebra

class complete_distrib_lattice:
  supersort: {complete_lattice,distrib_lattice}
  instances:
    Enum.finite_1 :: complete_distrib_lattice
    Enum.finite_2 :: complete_distrib_lattice
    Enum.finite_3 :: complete_distrib_lattice
    Enum.finite_4 :: complete_distrib_lattice
    Predicate.pred :: (type) complete_distrib_lattice
    bool :: complete_distrib_lattice
    fun :: (type, complete_distrib_lattice) complete_distrib_lattice
    option :: (complete_distrib_lattice) complete_distrib_lattice
    set :: (type) complete_distrib_lattice
    unit :: complete_distrib_lattice

class complete_lattice:
  supersort: {ccpo,conditionally_complete_lattice,bounded_lattice}
  instances:
    Enum.finite_1 :: complete_lattice
    Enum.finite_2 :: complete_lattice
    Enum.finite_3 :: complete_lattice
    Enum.finite_4 :: complete_lattice
    Enum.finite_5 :: complete_lattice
    Predicate.pred :: (type) complete_lattice
    bool :: complete_lattice
    dres :: (type) complete_lattice
    filter :: (type) complete_lattice
    fun :: (type, complete_lattice) complete_lattice
    nres :: (type) complete_lattice
    option :: (complete_lattice) complete_lattice
    set :: (type) complete_lattice
    unit :: complete_lattice

class complete_linorder:
  supersort: {complete_distrib_lattice,conditionally_complete_linorder}
  instances:
    Enum.finite_1 :: complete_linorder
    Enum.finite_2 :: complete_linorder
    Enum.finite_3 :: complete_linorder
    option :: (complete_linorder) complete_linorder
    unit :: complete_linorder

class complete_space:
  supersort: metric_space
  instances:
    complex :: complete_space
    real :: complete_space

class conditionally_complete_lattice:
  supersort: {Inf,Sup,lattice}
  instances:
    Enum.finite_1 :: conditionally_complete_lattice
    Enum.finite_2 :: conditionally_complete_lattice
    Enum.finite_3 :: conditionally_complete_lattice
    Enum.finite_4 :: conditionally_complete_lattice
    Enum.finite_5 :: conditionally_complete_lattice
    Predicate.pred :: (type) conditionally_complete_lattice
    bool :: conditionally_complete_lattice
    dres :: (type) conditionally_complete_lattice
    filter :: (type) conditionally_complete_lattice
    fun :: (type, complete_lattice) conditionally_complete_lattice
    int :: conditionally_complete_lattice
    nat :: conditionally_complete_lattice
    nres :: (type) conditionally_complete_lattice
    option :: (complete_lattice) conditionally_complete_lattice
    real :: conditionally_complete_lattice
    set :: (type) conditionally_complete_lattice
    unit :: conditionally_complete_lattice

class conditionally_complete_linorder:
  supersort: {conditionally_complete_lattice,linorder}
  instances:
    Enum.finite_1 :: conditionally_complete_linorder
    Enum.finite_2 :: conditionally_complete_linorder
    Enum.finite_3 :: conditionally_complete_linorder
    int :: conditionally_complete_linorder
    nat :: conditionally_complete_linorder
    option :: (complete_linorder) conditionally_complete_linorder
    real :: conditionally_complete_linorder
    unit :: conditionally_complete_linorder

class default:
  supersort: type
  parameters:
    default :: 'a
  instances:
    unit :: default

class dense_linorder:
  supersort: {dense_order,linorder}
  instances:
    Enum.finite_1 :: dense_linorder
    rat :: dense_linorder
    real :: dense_linorder

class dense_order:
  supersort: order
  instances:
    Enum.finite_1 :: dense_order
    rat :: dense_order
    real :: dense_order

class dioid:
  supersort: {canonically_ordered_monoid_add,ordered_semiring,semiring_1}
  instances:
    nat :: dioid

class discrete_topology:
  supersort: t2_space
  instances:
    bool :: discrete_topology
    int :: discrete_topology
    nat :: discrete_topology

class dist:
  supersort: type
  parameters:
    dist :: 'a \<Rightarrow> 'a \<Rightarrow> real
  instances:
    complex :: dist
    real :: dist

class dist_norm:
  supersort: {minus,dist,norm}
  instances:
    complex :: dist_norm
    real :: dist_norm

class distrib_lattice:
  supersort: lattice
  instances:
    Enum.finite_1 :: distrib_lattice
    Enum.finite_2 :: distrib_lattice
    Enum.finite_3 :: distrib_lattice
    Enum.finite_4 :: distrib_lattice
    Predicate.pred :: (type) distrib_lattice
    bool :: distrib_lattice
    filter :: (type) distrib_lattice
    fun :: (type, distrib_lattice) distrib_lattice
    int :: distrib_lattice
    nat :: distrib_lattice
    option :: (distrib_lattice) distrib_lattice
    rat :: distrib_lattice
    real :: distrib_lattice
    set :: (type) distrib_lattice
    unit :: distrib_lattice

class divide:
  supersort: type
  parameters:
    divide :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: divide
    Enum.finite_2 :: divide
    Enum.finite_3 :: divide
    bit :: divide
    complex :: divide
    int :: divide
    integer :: divide
    lint :: divide
    nat :: divide
    natural :: divide
    rat :: divide
    real :: divide
    word :: (len0) divide

class division_ring:
  supersort: {inverse,ring_1_no_zero_divisors}
  instances:
    Enum.finite_2 :: division_ring
    Enum.finite_3 :: division_ring
    bit :: division_ring
    complex :: division_ring
    rat :: division_ring
    real :: division_ring

class dvd:
  supersort: times
  instances:
    Enum.finite_1 :: dvd
    Enum.finite_2 :: dvd
    Enum.finite_3 :: dvd
    bit :: dvd
    bit0 :: (finite) dvd
    bit1 :: (finite) dvd
    complex :: dvd
    int :: dvd
    integer :: dvd
    lint :: dvd
    nat :: dvd
    natural :: dvd
    1 :: dvd
    rat :: dvd
    real :: dvd
    word :: (len0) dvd

class enum:
  supersort: finite
  parameters:
    enum_class.enum :: 'a list
    enum_class.enum_all :: ('a \<Rightarrow> bool) \<Rightarrow> bool
    enum_class.enum_ex :: ('a \<Rightarrow> bool) \<Rightarrow> bool
  instances:
    Enum.finite_1 :: enum
    Enum.finite_2 :: enum
    Enum.finite_3 :: enum
    Enum.finite_4 :: enum
    Enum.finite_5 :: enum
    bit0 :: (finite) enum
    bit1 :: (finite) enum
    bool :: enum
    char :: enum
    fun :: (enum, enum) enum
    1 :: enum
    option :: (enum) enum
    prod :: (enum, enum) enum
    set :: (enum) enum
    sum :: (enum, enum) enum
    unit :: enum
    word :: (len) enum

class enum_alt:
  supersort: type
  parameters:
    enum_alt :: nat \<Rightarrow> 'a option
  instances:
    bool :: enum_alt
    nat :: enum_alt
    word :: (len) enum_alt

class enumeration_alt:
  supersort: enum_alt
  instances:
    bool :: enumeration_alt
    nat :: enumeration_alt
    word :: (len) enumeration_alt

class enumeration_both:
  supersort: {enum,enumeration_alt}
  instances:
    bool :: enumeration_both
    word :: (len) enumeration_both

class equal:
  supersort: type
  parameters:
    equal_class.equal :: 'a \<Rightarrow> 'a \<Rightarrow> bool
  instances:
    ??.Lenses.test :: (type) equal
    ??.Quickcheck_Narrowing.narrowing_cons :: (type) equal
    ??.Quickcheck_Narrowing.narrowing_term :: equal
    ??.Quickcheck_Narrowing.narrowing_type :: equal
    ??.Quickcheck_Narrowing.property :: equal
    Enum.finite_1 :: equal
    Enum.finite_2 :: equal
    Enum.finite_3 :: equal
    Enum.finite_4 :: equal
    Enum.finite_5 :: equal
    M :: (type, type, type, type) equal
    Predicate.pred :: (type) equal
    Predicate.seq :: (type) equal
    Quickcheck_Exhaustive.three_valued :: (type) equal
    Quickcheck_Exhaustive.unknown :: (type) equal
    Quickcheck_Narrowing.cfun :: (type) equal
    Quickcheck_Narrowing.ffun :: (type, type) equal
    String.literal :: equal
    addr :: (type) equal
    baddr :: (type) equal
    bit :: equal
    bit0 :: (finite) equal
    bit1 :: (finite) equal
    bool :: equal
    char :: equal
    complex :: equal
    dres :: (type) equal
    elens :: (type, type, type) equal
    err :: equal
    filter :: (equal) equal
    fun :: (enum, equal) equal
    int :: equal
    integer :: equal
    itself :: (type) equal
    lazy_sequence :: (type) equal
    lens :: (type, type) equal
    lint :: equal
    list :: (type) equal
    llvm_amemory :: equal
    llvm_memory :: equal
    llvm_primval :: equal
    llvm_primval_struct :: equal
    llvm_ptr :: equal
    llvm_val :: equal
    llvm_vstruct :: equal
    memory :: (type) equal
    mres :: (type, type, type, type) equal
    multiset :: (equal) equal
    nat :: equal
    natural :: equal
    nres :: (type) equal
    num :: equal
    0 :: equal
    1 :: equal
    option :: (type) equal
    phantom :: (type, type) equal
    prod :: (type, type) equal
    ptr :: (llvm_rep) equal
    rat :: equal
    real :: equal
    rptr :: (type) equal
    sep_lifter_ext :: (unique_zero_sep_algebra, type, type, unique_zero_sep_algebra, type, type, type) equal
    set :: (equal) equal
    sum :: (type, type) equal
    sumbool :: equal
    tsa_opt :: (type) equal
    tuple_isomorphism :: (type, type, type) equal
    typerep :: equal
    unit :: equal
    va_item :: equal
    val :: (type) equal
    vstruct :: (type) equal
    word :: (len0) equal

class euclidean_ring:
  supersort: {euclidean_semiring,idom_modulo}
  instances:
    int :: euclidean_ring
    integer :: euclidean_ring

class euclidean_ring_cancel:
  supersort: {euclidean_ring,euclidean_semiring_cancel}
  instances:
    int :: euclidean_ring_cancel
    integer :: euclidean_ring_cancel

class euclidean_semiring:
  supersort: semidom_modulo
  parameters:
    euclidean_size :: 'a \<Rightarrow> nat
  instances:
    Enum.finite_2 :: euclidean_semiring
    Enum.finite_3 :: euclidean_semiring
    int :: euclidean_semiring
    integer :: euclidean_semiring
    nat :: euclidean_semiring
    natural :: euclidean_semiring

class euclidean_semiring_cancel:
  supersort: euclidean_semiring
  instances:
    Enum.finite_2 :: euclidean_semiring_cancel
    Enum.finite_3 :: euclidean_semiring_cancel
    int :: euclidean_semiring_cancel
    integer :: euclidean_semiring_cancel
    nat :: euclidean_semiring_cancel
    natural :: euclidean_semiring_cancel

class exhaustive:
  supersort: term_of
  parameters:
    exhaustive_class.exhaustive :: ('a \<Rightarrow> (bool \<times> term list) option) \<Rightarrow> natural \<Rightarrow> (bool \<times> term list) option
  instances:
    fun :: ({equal,exhaustive}, exhaustive) exhaustive
    int :: exhaustive
    integer :: exhaustive
    nat :: exhaustive
    natural :: exhaustive
    prod :: (exhaustive, exhaustive) exhaustive
    rat :: exhaustive
    real :: exhaustive
    set :: (exhaustive) exhaustive

class fast_exhaustive:
  supersort: term_of
  parameters:
    fast_exhaustive :: ('a \<Rightarrow> unit) \<Rightarrow> natural \<Rightarrow> unit

class field:
  supersort: {division_ring,idom_divide}
  instances:
    Enum.finite_2 :: field
    Enum.finite_3 :: field
    bit :: field
    complex :: field
    rat :: field
    real :: field

class field_abs_sgn:
  supersort: {field,idom_abs_sgn}
  instances:
    complex :: field_abs_sgn
    rat :: field_abs_sgn
    real :: field_abs_sgn

class field_char_0:
  supersort: {field,ring_char_0}
  instances:
    complex :: field_char_0
    rat :: field_char_0
    real :: field_char_0

class finite:
  supersort: type
  instances:
    Enum.finite_1 :: finite
    Enum.finite_2 :: finite
    Enum.finite_3 :: finite
    Enum.finite_4 :: finite
    Enum.finite_5 :: finite
    bit0 :: (finite) finite
    bit1 :: (finite) finite
    bool :: finite
    char :: finite
    fun :: (finite, finite) finite
    1 :: finite
    option :: (finite) finite
    prod :: (finite, finite) finite
    set :: (finite) finite
    sum :: (finite, finite) finite
    unit :: finite
    word :: (len0) finite

class finite_UNIV:
  supersort: type
  parameters:
    finite_UNIV :: ('a, bool) phantom
  instances:
    Enum.finite_1 :: finite_UNIV
    Enum.finite_2 :: finite_UNIV
    Enum.finite_3 :: finite_UNIV
    Enum.finite_4 :: finite_UNIV
    Enum.finite_5 :: finite_UNIV
    String.literal :: finite_UNIV
    bit0 :: (finite) finite_UNIV
    bit1 :: (finite) finite_UNIV
    bool :: finite_UNIV
    char :: finite_UNIV
    fun :: (finite_UNIV, card_UNIV) finite_UNIV
    int :: finite_UNIV
    integer :: finite_UNIV
    list :: (type) finite_UNIV
    nat :: finite_UNIV
    natural :: finite_UNIV
    0 :: finite_UNIV
    1 :: finite_UNIV
    option :: (finite_UNIV) finite_UNIV
    prod :: (finite_UNIV, finite_UNIV) finite_UNIV
    set :: (finite_UNIV) finite_UNIV
    sum :: (finite_UNIV, finite_UNIV) finite_UNIV
    unit :: finite_UNIV

class finite_distrib_lattice:
  supersort: {complete_distrib_lattice,finite_lattice}
  instances:
    Enum.finite_3 :: finite_distrib_lattice
    Enum.finite_4 :: finite_distrib_lattice

class finite_lattice:
  supersort: {complete_lattice,finite}
  instances:
    Enum.finite_3 :: finite_lattice
    Enum.finite_4 :: finite_lattice
    Enum.finite_5 :: finite_lattice

class first_countable_topology:
  supersort: topological_space
  instances:
    complex :: first_countable_topology
    real :: first_countable_topology

class floor_ceiling:
  supersort: archimedean_field
  parameters:
    floor :: 'a \<Rightarrow> int
  instances:
    rat :: floor_ceiling
    real :: floor_ceiling

class full_exhaustive:
  supersort: term_of
  parameters:
    full_exhaustive_class.full_exhaustive :: ('a \<times> (unit \<Rightarrow> term) \<Rightarrow> (bool \<times> term list) option) \<Rightarrow> natural \<Rightarrow> (bool \<times> term list) option
  instances:
    ??.Lenses.test :: (full_exhaustive) full_exhaustive
    Enum.finite_1 :: full_exhaustive
    Enum.finite_2 :: full_exhaustive
    Enum.finite_3 :: full_exhaustive
    Enum.finite_4 :: full_exhaustive
    Enum.finite_5 :: full_exhaustive
    M :: (full_exhaustive, full_exhaustive, {equal,full_exhaustive}, full_exhaustive) full_exhaustive
    addr :: (full_exhaustive) full_exhaustive
    baddr :: (full_exhaustive) full_exhaustive
    bit :: full_exhaustive
    bool :: full_exhaustive
    char :: full_exhaustive
    complex :: full_exhaustive
    dres :: (full_exhaustive) full_exhaustive
    elens :: ({equal,full_exhaustive}, {equal,full_exhaustive}, full_exhaustive) full_exhaustive
    err :: full_exhaustive
    fun :: ({equal,full_exhaustive}, full_exhaustive) full_exhaustive
    int :: full_exhaustive
    integer :: full_exhaustive
    lens :: ({equal,full_exhaustive}, {equal,full_exhaustive}) full_exhaustive
    list :: (full_exhaustive) full_exhaustive
    llvm_primval_struct :: full_exhaustive
    llvm_ptr :: full_exhaustive
    llvm_vstruct :: full_exhaustive
    memory :: (full_exhaustive) full_exhaustive
    mres :: (full_exhaustive, full_exhaustive, full_exhaustive, full_exhaustive) full_exhaustive
    multiset :: (full_exhaustive) full_exhaustive
    nat :: full_exhaustive
    natural :: full_exhaustive
    nres :: (full_exhaustive) full_exhaustive
    num :: full_exhaustive
    option :: (full_exhaustive) full_exhaustive
    phantom :: (typerep, full_exhaustive) full_exhaustive
    prod :: (full_exhaustive, full_exhaustive) full_exhaustive
    ptr :: ({llvm_rep,typerep}) full_exhaustive
    rat :: full_exhaustive
    real :: full_exhaustive
    rptr :: (full_exhaustive) full_exhaustive
    sep_lifter_ext :: ({equal,full_exhaustive,unique_zero_sep_algebra}, {equal,full_exhaustive}, full_exhaustive, {equal,full_exhaustive,unique_zero_sep_algebra}, {equal,full_exhaustive}, full_exhaustive, full_exhaustive) full_exhaustive
    set :: (full_exhaustive) full_exhaustive
    sum :: (full_exhaustive, full_exhaustive) full_exhaustive
    tsa_opt :: (full_exhaustive) full_exhaustive
    tuple_isomorphism :: ({equal,full_exhaustive}, full_exhaustive, full_exhaustive) full_exhaustive
    unit :: full_exhaustive
    va_item :: full_exhaustive
    val :: (full_exhaustive) full_exhaustive
    vstruct :: (full_exhaustive) full_exhaustive
    word :: ({len,typerep}) full_exhaustive

class gcd:
  supersort: {one,zero,dvd}
  parameters:
    gcd :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
    lcm :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    int :: gcd
    integer :: gcd
    nat :: gcd

class group_add:
  supersort: {cancel_semigroup_add,minus,monoid_add,uminus}
  instances:
    Enum.finite_1 :: group_add
    Enum.finite_2 :: group_add
    Enum.finite_3 :: group_add
    bit :: group_add
    bit0 :: (finite) group_add
    bit1 :: (finite) group_add
    complex :: group_add
    int :: group_add
    integer :: group_add
    1 :: group_add
    rat :: group_add
    real :: group_add
    word :: (len0) group_add

class idom:
  supersort: {comm_ring_1,ring_1_no_zero_divisors,semidom,comm_semiring_1_cancel_crossproduct}
  instances:
    Enum.finite_2 :: idom
    Enum.finite_3 :: idom
    bit :: idom
    complex :: idom
    int :: idom
    integer :: idom
    rat :: idom
    real :: idom

class idom_abs_sgn:
  supersort: {abs,sgn,idom}
  instances:
    Enum.finite_2 :: idom_abs_sgn
    Enum.finite_3 :: idom_abs_sgn
    complex :: idom_abs_sgn
    int :: idom_abs_sgn
    integer :: idom_abs_sgn
    rat :: idom_abs_sgn
    real :: idom_abs_sgn

class idom_divide:
  supersort: {idom,semidom_divide}
  instances:
    Enum.finite_2 :: idom_divide
    Enum.finite_3 :: idom_divide
    bit :: idom_divide
    complex :: idom_divide
    int :: idom_divide
    integer :: idom_divide
    rat :: idom_divide
    real :: idom_divide

class idom_modulo:
  supersort: {idom_divide,semidom_modulo}
  instances:
    Enum.finite_2 :: idom_modulo
    Enum.finite_3 :: idom_modulo
    int :: idom_modulo
    integer :: idom_modulo

class inf:
  supersort: type
  parameters:
    inf :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: inf
    Enum.finite_2 :: inf
    Enum.finite_3 :: inf
    Enum.finite_4 :: inf
    Enum.finite_5 :: inf
    Predicate.pred :: (type) inf
    bool :: inf
    dres :: (type) inf
    filter :: (type) inf
    fun :: (type, semilattice_inf) inf
    int :: inf
    nat :: inf
    nres :: (type) inf
    option :: (inf) inf
    rat :: inf
    real :: inf
    set :: (type) inf
    unit :: inf

class inverse:
  supersort: divide
  parameters:
    inverse :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: inverse
    Enum.finite_2 :: inverse
    Enum.finite_3 :: inverse
    bit :: inverse
    complex :: inverse
    rat :: inverse
    real :: inverse

class is_testable:
  supersort: type
  instances:
    bool :: is_testable
    fun :: ({term_of,narrowing,partial_term_of}, is_testable) is_testable

class lattice:
  supersort: {semilattice_inf,semilattice_sup}
  instances:
    Enum.finite_1 :: lattice
    Enum.finite_2 :: lattice
    Enum.finite_3 :: lattice
    Enum.finite_4 :: lattice
    Enum.finite_5 :: lattice
    Predicate.pred :: (type) lattice
    bool :: lattice
    dres :: (type) lattice
    filter :: (type) lattice
    fun :: (type, lattice) lattice
    int :: lattice
    nat :: lattice
    nres :: (type) lattice
    option :: (lattice) lattice
    rat :: lattice
    real :: lattice
    set :: (type) lattice
    unit :: lattice

class len:
  supersort: len0
  instances:
    Enum.finite_1 :: len
    Enum.finite_2 :: len
    Enum.finite_3 :: len
    bit0 :: (len) len
    bit1 :: (len0) len
    1 :: len
    signed :: (len) len

class len0:
  supersort: type
  parameters:
    len_of :: 'a itself \<Rightarrow> nat
  instances:
    Enum.finite_1 :: len0
    Enum.finite_2 :: len0
    Enum.finite_3 :: len0
    bit0 :: (len0) len0
    bit1 :: (len0) len0
    0 :: len0
    1 :: len0
    signed :: (len0) len0

class len2:
  supersort: len
  instances:
    bit0 :: (len) len2
    bit1 :: (len) len2

class linear_continuum:
  supersort: {conditionally_complete_linorder,dense_linorder}
  instances:
    real :: linear_continuum

class linear_continuum_topology:
  supersort: {linear_continuum,linorder_topology,perfect_space}
  instances:
    real :: linear_continuum_topology

class linorder:
  supersort: order
  instances:
    Enum.finite_1 :: linorder
    Enum.finite_2 :: linorder
    Enum.finite_3 :: linorder
    String.literal :: linorder
    bit0 :: (finite) linorder
    bit1 :: (finite) linorder
    bool :: linorder
    int :: linorder
    integer :: linorder
    nat :: linorder
    natural :: linorder
    num :: linorder
    1 :: linorder
    option :: (linorder) linorder
    rat :: linorder
    real :: linorder
    unit :: linorder
    word :: (len0) linorder

class linorder_topology:
  supersort: {linorder,order_topology,t2_space}
  instances:
    bool :: linorder_topology
    int :: linorder_topology
    nat :: linorder_topology
    real :: linorder_topology

class linordered_ab_group_add:
  supersort: {linordered_cancel_ab_semigroup_add,ordered_ab_group_add}
  instances:
    Enum.finite_1 :: linordered_ab_group_add
    int :: linordered_ab_group_add
    integer :: linordered_ab_group_add
    rat :: linordered_ab_group_add
    real :: linordered_ab_group_add

class linordered_ab_semigroup_add:
  supersort: {ordered_ab_semigroup_add,linorder}
  instances:
    Enum.finite_1 :: linordered_ab_semigroup_add
    int :: linordered_ab_semigroup_add
    integer :: linordered_ab_semigroup_add
    nat :: linordered_ab_semigroup_add
    natural :: linordered_ab_semigroup_add
    rat :: linordered_ab_semigroup_add
    real :: linordered_ab_semigroup_add

class linordered_cancel_ab_semigroup_add:
  supersort: {linordered_ab_semigroup_add,ordered_ab_semigroup_add_imp_le}
  instances:
    Enum.finite_1 :: linordered_cancel_ab_semigroup_add
    int :: linordered_cancel_ab_semigroup_add
    integer :: linordered_cancel_ab_semigroup_add
    nat :: linordered_cancel_ab_semigroup_add
    natural :: linordered_cancel_ab_semigroup_add
    rat :: linordered_cancel_ab_semigroup_add
    real :: linordered_cancel_ab_semigroup_add

class linordered_comm_semiring_strict:
  supersort: {linordered_semiring_strict,ordered_cancel_comm_semiring}
  instances:
    Enum.finite_1 :: linordered_comm_semiring_strict
    int :: linordered_comm_semiring_strict
    integer :: linordered_comm_semiring_strict
    nat :: linordered_comm_semiring_strict
    natural :: linordered_comm_semiring_strict
    rat :: linordered_comm_semiring_strict
    real :: linordered_comm_semiring_strict

class linordered_field:
  supersort: {field_abs_sgn,field_char_0,unbounded_dense_linorder,linordered_idom}
  instances:
    rat :: linordered_field
    real :: linordered_field

class linordered_idom:
  supersort: {ring_char_0,idom_abs_sgn,linordered_ring_strict,linordered_semidom,linordered_semiring_1_strict,ordered_comm_ring,ordered_ring_abs}
  instances:
    int :: linordered_idom
    integer :: linordered_idom
    rat :: linordered_idom
    real :: linordered_idom

class linordered_nonzero_semiring:
  supersort: {semiring_char_0,linorder,comm_semiring_1,ordered_comm_semiring,zero_less_one}
  instances:
    int :: linordered_nonzero_semiring
    integer :: linordered_nonzero_semiring
    nat :: linordered_nonzero_semiring
    natural :: linordered_nonzero_semiring
    rat :: linordered_nonzero_semiring
    real :: linordered_nonzero_semiring

class linordered_ring:
  supersort: {linordered_ab_group_add,ordered_ab_group_add_abs,abs_if,linordered_semiring,ordered_ring}
  instances:
    Enum.finite_1 :: linordered_ring
    int :: linordered_ring
    integer :: linordered_ring
    rat :: linordered_ring
    real :: linordered_ring

class linordered_ring_strict:
  supersort: {linordered_ring,linordered_semiring_strict,ring_no_zero_divisors}
  instances:
    Enum.finite_1 :: linordered_ring_strict
    int :: linordered_ring_strict
    integer :: linordered_ring_strict
    rat :: linordered_ring_strict
    real :: linordered_ring_strict

class linordered_semidom:
  supersort: {linordered_comm_semiring_strict,linordered_nonzero_semiring,semidom}
  instances:
    int :: linordered_semidom
    integer :: linordered_semidom
    nat :: linordered_semidom
    natural :: linordered_semidom
    rat :: linordered_semidom
    real :: linordered_semidom

class linordered_semiring:
  supersort: {linordered_cancel_ab_semigroup_add,ordered_ab_semigroup_monoid_add_imp_le,ordered_cancel_semiring}
  instances:
    Enum.finite_1 :: linordered_semiring
    int :: linordered_semiring
    integer :: linordered_semiring
    nat :: linordered_semiring
    natural :: linordered_semiring
    rat :: linordered_semiring
    real :: linordered_semiring

class linordered_semiring_1:
  supersort: {linordered_semiring,semiring_1,zero_less_one}
  instances:
    int :: linordered_semiring_1
    integer :: linordered_semiring_1
    rat :: linordered_semiring_1
    real :: linordered_semiring_1

class linordered_semiring_1_strict:
  supersort: {linordered_semiring_1,linordered_semiring_strict}
  instances:
    int :: linordered_semiring_1_strict
    integer :: linordered_semiring_1_strict
    rat :: linordered_semiring_1_strict
    real :: linordered_semiring_1_strict

class linordered_semiring_strict:
  supersort: linordered_semiring
  instances:
    Enum.finite_1 :: linordered_semiring_strict
    int :: linordered_semiring_strict
    integer :: linordered_semiring_strict
    nat :: linordered_semiring_strict
    natural :: linordered_semiring_strict
    rat :: linordered_semiring_strict
    real :: linordered_semiring_strict

class llvm_rep:
  supersort: llvm_repv
  parameters:
    to_val :: 'a \<Rightarrow> llvm_val
    from_val :: llvm_val \<Rightarrow> 'a
    struct_of :: 'a itself \<Rightarrow> llvm_vstruct
    init :: 'a
  instances:
    prod :: (llvm_rep, llvm_rep) llvm_rep
    ptr :: (llvm_rep) llvm_rep
    word :: (len) llvm_rep

class llvm_repv:
  supersort: type
  instances:
    prod :: (llvm_rep, llvm_rep) llvm_repv
    ptr :: (llvm_rep) llvm_repv
    unit :: llvm_repv
    word :: (len) llvm_repv

class ln:
  supersort: {banach,real_normed_algebra_1}
  parameters:
    ln :: 'a \<Rightarrow> 'a
  instances:
    real :: ln

class metric_space:
  supersort: {uniformity_dist,first_countable_topology,t2_space,uniform_space}
  instances:
    complex :: metric_space
    real :: metric_space

class minus:
  supersort: type
  parameters:
    minus :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: minus
    Enum.finite_2 :: minus
    Enum.finite_3 :: minus
    Enum.finite_4 :: minus
    Predicate.pred :: (type) minus
    bit :: minus
    bit0 :: (finite) minus
    bit1 :: (finite) minus
    bool :: minus
    complex :: minus
    fun :: (type, minus) minus
    int :: minus
    integer :: minus
    lint :: minus
    multiset :: (type) minus
    nat :: minus
    natural :: minus
    1 :: minus
    rat :: minus
    real :: minus
    set :: (type) minus
    unit :: minus
    word :: (len0) minus

class modulo:
  supersort: {divide,dvd}
  parameters:
    modulo :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: modulo
    Enum.finite_2 :: modulo
    Enum.finite_3 :: modulo
    int :: modulo
    integer :: modulo
    lint :: modulo
    nat :: modulo
    natural :: modulo
    word :: (len0) modulo

class monoid_add:
  supersort: {semigroup_add,zero}
  instances:
    Enum.finite_1 :: monoid_add
    Enum.finite_2 :: monoid_add
    Enum.finite_3 :: monoid_add
    String.literal :: monoid_add
    bit :: monoid_add
    bit0 :: (finite) monoid_add
    bit1 :: (finite) monoid_add
    complex :: monoid_add
    int :: monoid_add
    integer :: monoid_add
    multiset :: (type) monoid_add
    nat :: monoid_add
    natural :: monoid_add
    1 :: monoid_add
    rat :: monoid_add
    real :: monoid_add
    word :: (len0) monoid_add

class monoid_mult:
  supersort: {semigroup_mult,power}
  instances:
    Enum.finite_1 :: monoid_mult
    Enum.finite_2 :: monoid_mult
    Enum.finite_3 :: monoid_mult
    bit :: monoid_mult
    bit0 :: (finite) monoid_mult
    bit1 :: (finite) monoid_mult
    complex :: monoid_mult
    int :: monoid_mult
    integer :: monoid_mult
    nat :: monoid_mult
    natural :: monoid_mult
    1 :: monoid_mult
    rat :: monoid_mult
    real :: monoid_mult
    word :: (len0) monoid_mult

class mult_zero:
  supersort: {times,zero}
  instances:
    Enum.finite_1 :: mult_zero
    Enum.finite_2 :: mult_zero
    Enum.finite_3 :: mult_zero
    bit :: mult_zero
    bit0 :: (finite) mult_zero
    bit1 :: (finite) mult_zero
    complex :: mult_zero
    int :: mult_zero
    integer :: mult_zero
    nat :: mult_zero
    natural :: mult_zero
    1 :: mult_zero
    rat :: mult_zero
    real :: mult_zero
    word :: (len0) mult_zero

class narrowing:
  supersort: type
  parameters:
    narrowing :: integer \<Rightarrow> 'a ??.Quickcheck_Narrowing.narrowing_cons
  instances:
    ??.Lenses.test :: ({narrowing,typerep}) narrowing
    Enum.finite_1 :: narrowing
    Enum.finite_2 :: narrowing
    Enum.finite_3 :: narrowing
    Enum.finite_4 :: narrowing
    Enum.finite_5 :: narrowing
    Quickcheck_Narrowing.cfun :: ({narrowing,typerep}) narrowing
    Quickcheck_Narrowing.ffun :: ({narrowing,typerep}, {narrowing,typerep}) narrowing
    addr :: ({narrowing,typerep}) narrowing
    baddr :: ({narrowing,typerep}) narrowing
    bit :: narrowing
    bool :: narrowing
    char :: narrowing
    complex :: narrowing
    dres :: ({narrowing,typerep}) narrowing
    err :: narrowing
    int :: narrowing
    integer :: narrowing
    list :: ({narrowing,typerep}) narrowing
    llvm_primval_struct :: narrowing
    llvm_ptr :: narrowing
    llvm_vstruct :: narrowing
    memory :: ({narrowing,typerep}) narrowing
    mres :: ({narrowing,typerep}, {narrowing,typerep}, {narrowing,typerep}, {narrowing,typerep}) narrowing
    nat :: narrowing
    natural :: narrowing
    nres :: ({narrowing,typerep}) narrowing
    num :: narrowing
    option :: ({narrowing,typerep}) narrowing
    phantom :: (typerep, {narrowing,typerep}) narrowing
    prod :: ({narrowing,typerep}, {narrowing,typerep}) narrowing
    ptr :: ({llvm_rep,typerep}) narrowing
    rat :: narrowing
    real :: narrowing
    rptr :: ({narrowing,typerep}) narrowing
    set :: (narrowing) narrowing
    sum :: ({narrowing,typerep}, {narrowing,typerep}) narrowing
    tsa_opt :: ({narrowing,typerep}) narrowing
    unit :: narrowing
    va_item :: narrowing
    val :: ({narrowing,typerep}) narrowing
    vstruct :: ({narrowing,typerep}) narrowing

class neg_numeral:
  supersort: {group_add,numeral}
  instances:
    Enum.finite_2 :: neg_numeral
    Enum.finite_3 :: neg_numeral
    bit :: neg_numeral
    bit0 :: (finite) neg_numeral
    bit1 :: (finite) neg_numeral
    complex :: neg_numeral
    int :: neg_numeral
    integer :: neg_numeral
    rat :: neg_numeral
    real :: neg_numeral
    word :: (len0) neg_numeral

class no_bot:
  supersort: order
  instances:
    int :: no_bot
    rat :: no_bot
    real :: no_bot

class no_top:
  supersort: order
  instances:
    int :: no_top
    nat :: no_top
    rat :: no_top
    real :: no_top

class norm:
  supersort: type
  parameters:
    norm :: 'a \<Rightarrow> real
  instances:
    complex :: norm
    real :: norm

class normalization_semidom:
  supersort: {algebraic_semidom,semidom_divide_unit_factor}
  parameters:
    normalize :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_2 :: normalization_semidom
    Enum.finite_3 :: normalization_semidom
    int :: normalization_semidom
    nat :: normalization_semidom

class numeral:
  supersort: {one,semigroup_add}
  instances:
    Enum.finite_2 :: numeral
    Enum.finite_3 :: numeral
    bit :: numeral
    bit0 :: (finite) numeral
    bit1 :: (finite) numeral
    complex :: numeral
    int :: numeral
    integer :: numeral
    nat :: numeral
    natural :: numeral
    1 :: numeral
    rat :: numeral
    real :: numeral
    word :: (len0) numeral

class one:
  supersort: type
  parameters:
    one_class.one :: 'a
  instances:
    Enum.finite_1 :: one
    Enum.finite_2 :: one
    Enum.finite_3 :: one
    bit :: one
    bit0 :: (finite) one
    bit1 :: (finite) one
    complex :: one
    int :: one
    integer :: one
    nat :: one
    natural :: one
    1 :: one
    rat :: one
    real :: one
    word :: (len0) one

class open:
  supersort: type
  parameters:
    open :: 'a set \<Rightarrow> bool
  instances:
    bool :: open
    complex :: open
    int :: open
    nat :: open
    prod :: (topological_space, topological_space) open
    real :: open

class open_uniformity:
  supersort: {topological_space,uniformity}
  instances:
    complex :: open_uniformity
    real :: open_uniformity

class ord:
  supersort: type
  parameters:
    less_eq :: 'a \<Rightarrow> 'a \<Rightarrow> bool
    less :: 'a \<Rightarrow> 'a \<Rightarrow> bool
  instances:
    Enum.finite_1 :: ord
    Enum.finite_2 :: ord
    Enum.finite_3 :: ord
    Enum.finite_4 :: ord
    Enum.finite_5 :: ord
    Predicate.pred :: (type) ord
    String.literal :: ord
    bit0 :: (finite) ord
    bit1 :: (finite) ord
    bool :: ord
    dres :: (type) ord
    filter :: (type) ord
    fun :: (type, ord) ord
    int :: ord
    integer :: ord
    lint :: ord
    multiset :: (preorder) ord
    nat :: ord
    natural :: ord
    nres :: (type) ord
    num :: ord
    1 :: ord
    option :: (preorder) ord
    rat :: ord
    real :: ord
    set :: (type) ord
    unit :: ord
    word :: (len0) ord

class order:
  supersort: preorder
  instances:
    Enum.finite_1 :: order
    Enum.finite_2 :: order
    Enum.finite_3 :: order
    Enum.finite_4 :: order
    Enum.finite_5 :: order
    Predicate.pred :: (type) order
    String.literal :: order
    bit0 :: (finite) order
    bit1 :: (finite) order
    bool :: order
    dres :: (type) order
    filter :: (type) order
    fun :: (type, order) order
    int :: order
    integer :: order
    multiset :: (preorder) order
    nat :: order
    natural :: order
    nres :: (type) order
    num :: order
    1 :: order
    option :: (order) order
    rat :: order
    real :: order
    set :: (type) order
    unit :: order
    word :: (len0) order

class order_bot:
  supersort: {bot,order}
  instances:
    Enum.finite_1 :: order_bot
    Enum.finite_2 :: order_bot
    Enum.finite_3 :: order_bot
    Enum.finite_4 :: order_bot
    Enum.finite_5 :: order_bot
    Predicate.pred :: (type) order_bot
    bool :: order_bot
    dres :: (type) order_bot
    filter :: (type) order_bot
    fun :: (type, order_bot) order_bot
    nat :: order_bot
    nres :: (type) order_bot
    option :: (order) order_bot
    set :: (type) order_bot
    unit :: order_bot

class order_top:
  supersort: {order,top}
  instances:
    Enum.finite_1 :: order_top
    Enum.finite_2 :: order_top
    Enum.finite_3 :: order_top
    Enum.finite_4 :: order_top
    Enum.finite_5 :: order_top
    Predicate.pred :: (type) order_top
    bool :: order_top
    dres :: (type) order_top
    filter :: (type) order_top
    fun :: (type, order_top) order_top
    nres :: (type) order_top
    option :: (order_top) order_top
    set :: (type) order_top
    unit :: order_top

class order_topology:
  supersort: {order,topological_space}
  instances:
    bool :: order_topology
    int :: order_topology
    nat :: order_topology
    real :: order_topology

class ordered_ab_group_add:
  supersort: {ab_group_add,ordered_ab_semigroup_monoid_add_imp_le}
  instances:
    Enum.finite_1 :: ordered_ab_group_add
    int :: ordered_ab_group_add
    integer :: ordered_ab_group_add
    rat :: ordered_ab_group_add
    real :: ordered_ab_group_add

class ordered_ab_group_add_abs:
  supersort: {abs,ordered_ab_group_add}
  instances:
    Enum.finite_1 :: ordered_ab_group_add_abs
    int :: ordered_ab_group_add_abs
    integer :: ordered_ab_group_add_abs
    rat :: ordered_ab_group_add_abs
    real :: ordered_ab_group_add_abs

class ordered_ab_semigroup_add:
  supersort: {ab_semigroup_add,order}
  instances:
    Enum.finite_1 :: ordered_ab_semigroup_add
    int :: ordered_ab_semigroup_add
    integer :: ordered_ab_semigroup_add
    multiset :: (preorder) ordered_ab_semigroup_add
    nat :: ordered_ab_semigroup_add
    natural :: ordered_ab_semigroup_add
    rat :: ordered_ab_semigroup_add
    real :: ordered_ab_semigroup_add

class ordered_ab_semigroup_add_imp_le:
  supersort: ordered_cancel_ab_semigroup_add
  instances:
    Enum.finite_1 :: ordered_ab_semigroup_add_imp_le
    int :: ordered_ab_semigroup_add_imp_le
    integer :: ordered_ab_semigroup_add_imp_le
    nat :: ordered_ab_semigroup_add_imp_le
    natural :: ordered_ab_semigroup_add_imp_le
    rat :: ordered_ab_semigroup_add_imp_le
    real :: ordered_ab_semigroup_add_imp_le

class ordered_ab_semigroup_monoid_add_imp_le:
  supersort: {cancel_comm_monoid_add,ordered_ab_semigroup_add_imp_le,ordered_cancel_comm_monoid_add}
  instances:
    Enum.finite_1 :: ordered_ab_semigroup_monoid_add_imp_le
    int :: ordered_ab_semigroup_monoid_add_imp_le
    integer :: ordered_ab_semigroup_monoid_add_imp_le
    nat :: ordered_ab_semigroup_monoid_add_imp_le
    natural :: ordered_ab_semigroup_monoid_add_imp_le
    rat :: ordered_ab_semigroup_monoid_add_imp_le
    real :: ordered_ab_semigroup_monoid_add_imp_le

class ordered_cancel_ab_semigroup_add:
  supersort: {cancel_ab_semigroup_add,strict_ordered_ab_semigroup_add}
  instances:
    Enum.finite_1 :: ordered_cancel_ab_semigroup_add
    int :: ordered_cancel_ab_semigroup_add
    integer :: ordered_cancel_ab_semigroup_add
    nat :: ordered_cancel_ab_semigroup_add
    natural :: ordered_cancel_ab_semigroup_add
    rat :: ordered_cancel_ab_semigroup_add
    real :: ordered_cancel_ab_semigroup_add

class ordered_cancel_comm_monoid_add:
  supersort: {ordered_cancel_ab_semigroup_add,ordered_comm_monoid_add,strict_ordered_comm_monoid_add}
  instances:
    Enum.finite_1 :: ordered_cancel_comm_monoid_add
    int :: ordered_cancel_comm_monoid_add
    integer :: ordered_cancel_comm_monoid_add
    nat :: ordered_cancel_comm_monoid_add
    natural :: ordered_cancel_comm_monoid_add
    rat :: ordered_cancel_comm_monoid_add
    real :: ordered_cancel_comm_monoid_add

class ordered_cancel_comm_monoid_diff:
  supersort: {canonically_ordered_monoid_add,comm_monoid_diff,ordered_ab_semigroup_add_imp_le}
  instances:
    Enum.finite_1 :: ordered_cancel_comm_monoid_diff
    nat :: ordered_cancel_comm_monoid_diff

class ordered_cancel_comm_semiring:
  supersort: {comm_semiring_0_cancel,ordered_cancel_semiring,ordered_comm_semiring}
  instances:
    Enum.finite_1 :: ordered_cancel_comm_semiring
    int :: ordered_cancel_comm_semiring
    integer :: ordered_cancel_comm_semiring
    nat :: ordered_cancel_comm_semiring
    natural :: ordered_cancel_comm_semiring
    rat :: ordered_cancel_comm_semiring
    real :: ordered_cancel_comm_semiring

class ordered_cancel_semiring:
  supersort: {ordered_semiring_0,semiring_0_cancel}
  instances:
    Enum.finite_1 :: ordered_cancel_semiring
    int :: ordered_cancel_semiring
    integer :: ordered_cancel_semiring
    nat :: ordered_cancel_semiring
    natural :: ordered_cancel_semiring
    rat :: ordered_cancel_semiring
    real :: ordered_cancel_semiring

class ordered_comm_monoid_add:
  supersort: {comm_monoid_add,ordered_ab_semigroup_add}
  instances:
    Enum.finite_1 :: ordered_comm_monoid_add
    int :: ordered_comm_monoid_add
    integer :: ordered_comm_monoid_add
    nat :: ordered_comm_monoid_add
    natural :: ordered_comm_monoid_add
    rat :: ordered_comm_monoid_add
    real :: ordered_comm_monoid_add

class ordered_comm_ring:
  supersort: {comm_ring,ordered_cancel_comm_semiring,ordered_ring}
  instances:
    Enum.finite_1 :: ordered_comm_ring
    int :: ordered_comm_ring
    integer :: ordered_comm_ring
    rat :: ordered_comm_ring
    real :: ordered_comm_ring

class ordered_comm_semiring:
  supersort: {comm_semiring_0,ordered_semiring}
  instances:
    Enum.finite_1 :: ordered_comm_semiring
    int :: ordered_comm_semiring
    integer :: ordered_comm_semiring
    nat :: ordered_comm_semiring
    natural :: ordered_comm_semiring
    rat :: ordered_comm_semiring
    real :: ordered_comm_semiring

class ordered_real_vector:
  supersort: {ordered_ab_group_add,real_vector}

class ordered_ring:
  supersort: {ordered_ab_group_add,ordered_cancel_semiring,ring}
  instances:
    Enum.finite_1 :: ordered_ring
    int :: ordered_ring
    integer :: ordered_ring
    rat :: ordered_ring
    real :: ordered_ring

class ordered_ring_abs:
  supersort: {ordered_ab_group_add_abs,ordered_ring}
  instances:
    Enum.finite_1 :: ordered_ring_abs
    int :: ordered_ring_abs
    integer :: ordered_ring_abs
    rat :: ordered_ring_abs
    real :: ordered_ring_abs

class ordered_semiring:
  supersort: {ordered_comm_monoid_add,semiring}
  instances:
    Enum.finite_1 :: ordered_semiring
    int :: ordered_semiring
    integer :: ordered_semiring
    nat :: ordered_semiring
    natural :: ordered_semiring
    rat :: ordered_semiring
    real :: ordered_semiring

class ordered_semiring_0:
  supersort: {ordered_semiring,semiring_0}
  instances:
    Enum.finite_1 :: ordered_semiring_0
    int :: ordered_semiring_0
    integer :: ordered_semiring_0
    nat :: ordered_semiring_0
    natural :: ordered_semiring_0
    rat :: ordered_semiring_0
    real :: ordered_semiring_0

class partial_term_of:
  supersort: typerep
  parameters:
    partial_term_of :: 'a itself \<Rightarrow> ??.Quickcheck_Narrowing.narrowing_term \<Rightarrow> term
  instances:
    ??.Lenses.test :: (typerep) partial_term_of
    ??.Quickcheck_Narrowing.narrowing_cons :: (typerep) partial_term_of
    ??.Quickcheck_Narrowing.narrowing_term :: partial_term_of
    ??.Quickcheck_Narrowing.narrowing_type :: partial_term_of
    ??.Quickcheck_Narrowing.property :: partial_term_of
    Enum.finite_1 :: partial_term_of
    Enum.finite_2 :: partial_term_of
    Enum.finite_3 :: partial_term_of
    Enum.finite_4 :: partial_term_of
    Enum.finite_5 :: partial_term_of
    M :: (typerep, typerep, typerep, typerep) partial_term_of
    Predicate.pred :: (typerep) partial_term_of
    Predicate.seq :: (typerep) partial_term_of
    Quickcheck_Exhaustive.three_valued :: (typerep) partial_term_of
    Quickcheck_Exhaustive.unknown :: (typerep) partial_term_of
    Quickcheck_Narrowing.cfun :: (typerep) partial_term_of
    Quickcheck_Narrowing.ffun :: (typerep, typerep) partial_term_of
    String.literal :: partial_term_of
    addr :: (typerep) partial_term_of
    baddr :: (typerep) partial_term_of
    bit :: partial_term_of
    bool :: partial_term_of
    char :: partial_term_of
    complex :: partial_term_of
    dr_assn :: (typerep, typerep) partial_term_of
    dres :: (typerep) partial_term_of
    elens :: (typerep, typerep, typerep) partial_term_of
    err :: partial_term_of
    filter :: (typerep) partial_term_of
    int :: partial_term_of
    integer :: partial_term_of
    itself :: (typerep) partial_term_of
    lazy_sequence :: (typerep) partial_term_of
    lens :: (typerep, typerep) partial_term_of
    list :: (typerep) partial_term_of
    llvm_amemory :: partial_term_of
    llvm_memory :: partial_term_of
    llvm_primval :: partial_term_of
    llvm_primval_struct :: partial_term_of
    llvm_ptr :: partial_term_of
    llvm_val :: partial_term_of
    llvm_vstruct :: partial_term_of
    memory :: (typerep) partial_term_of
    mres :: (typerep, typerep, typerep, typerep) partial_term_of
    multiset :: (typerep) partial_term_of
    nat :: partial_term_of
    nres :: (typerep) partial_term_of
    num :: partial_term_of
    0 :: partial_term_of
    1 :: partial_term_of
    option :: (typerep) partial_term_of
    phantom :: (typerep, typerep) partial_term_of
    prod :: (typerep, typerep) partial_term_of
    ptr :: (typerep) partial_term_of
    rat :: partial_term_of
    real :: partial_term_of
    rptr :: (typerep) partial_term_of
    sep_lifter_ext :: (typerep, typerep, typerep, typerep, typerep, typerep, typerep) partial_term_of
    set :: (typerep) partial_term_of
    sum :: (typerep, typerep) partial_term_of
    sumbool :: partial_term_of
    term :: partial_term_of
    tsa_opt :: (typerep) partial_term_of
    tuple_isomorphism :: (typerep, typerep, typerep) partial_term_of
    typerep :: partial_term_of
    unit :: partial_term_of
    va_item :: partial_term_of
    val :: (typerep) partial_term_of
    vstruct :: (typerep) partial_term_of
    word :: (typerep) partial_term_of

class perfect_space:
  supersort: topological_space
  instances:
    complex :: perfect_space
    real :: perfect_space

class plus:
  supersort: type
  parameters:
    plus :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: plus
    Enum.finite_2 :: plus
    Enum.finite_3 :: plus
    String.literal :: plus
    aval :: (type) plus
    bit :: plus
    bit0 :: (finite) plus
    bit1 :: (finite) plus
    complex :: plus
    fun :: (type, stronger_sep_algebra) plus
    int :: plus
    integer :: plus
    lint :: plus
    llvm_amemory :: plus
    multiset :: (type) plus
    nat :: plus
    natural :: plus
    num :: plus
    1 :: plus
    option :: (stronger_sep_algebra) plus
    prod :: (stronger_sep_algebra, stronger_sep_algebra) plus
    rat :: plus
    real :: plus
    tsa_opt :: (type) plus
    word :: (len0) plus

class power:
  supersort: {one,times}
  instances:
    Enum.finite_1 :: power
    Enum.finite_2 :: power
    Enum.finite_3 :: power
    bit :: power
    bit0 :: (finite) power
    bit1 :: (finite) power
    complex :: power
    int :: power
    integer :: power
    nat :: power
    natural :: power
    1 :: power
    rat :: power
    real :: power
    word :: (len0) power

class pre_sep_algebra:
  supersort: {plus,zero}
  parameters:
    sep_disj :: 'a \<Rightarrow> 'a \<Rightarrow> bool
  instances:
    aval :: (type) pre_sep_algebra
    fun :: (type, stronger_sep_algebra) pre_sep_algebra
    llvm_amemory :: pre_sep_algebra
    option :: (stronger_sep_algebra) pre_sep_algebra
    prod :: (stronger_sep_algebra, stronger_sep_algebra) pre_sep_algebra
    tsa_opt :: (type) pre_sep_algebra

class preorder:
  supersort: ord
  instances:
    Enum.finite_1 :: preorder
    Enum.finite_2 :: preorder
    Enum.finite_3 :: preorder
    Enum.finite_4 :: preorder
    Enum.finite_5 :: preorder
    Predicate.pred :: (type) preorder
    String.literal :: preorder
    bit0 :: (finite) preorder
    bit1 :: (finite) preorder
    bool :: preorder
    dres :: (type) preorder
    filter :: (type) preorder
    fun :: (type, preorder) preorder
    int :: preorder
    integer :: preorder
    multiset :: (preorder) preorder
    nat :: preorder
    natural :: preorder
    nres :: (type) preorder
    num :: preorder
    1 :: preorder
    option :: (preorder) preorder
    rat :: preorder
    real :: preorder
    set :: (type) preorder
    unit :: preorder
    word :: (len0) preorder

class random:
  supersort: typerep
  parameters:
    random_class.random :: natural \<Rightarrow> natural \<times> natural \<Rightarrow> ('a \<times> (unit \<Rightarrow> term)) \<times> natural \<times> natural
  instances:
    ??.Lenses.test :: (random) random
    Enum.finite_1 :: random
    Enum.finite_2 :: random
    Enum.finite_3 :: random
    Enum.finite_4 :: random
    Enum.finite_5 :: random
    M :: (random, random, {term_of,equal,random}, random) random
    String.literal :: random
    addr :: (random) random
    baddr :: (random) random
    bit :: random
    bool :: random
    char :: random
    complex :: random
    dres :: (random) random
    elens :: ({term_of,equal,random}, {term_of,equal,random}, random) random
    err :: random
    fun :: ({term_of,equal}, random) random
    int :: random
    integer :: random
    itself :: (typerep) random
    lens :: ({term_of,equal,random}, {term_of,equal,random}) random
    list :: (random) random
    llvm_primval_struct :: random
    llvm_ptr :: random
    llvm_vstruct :: random
    memory :: (random) random
    mres :: (random, random, random, random) random
    multiset :: (random) random
    nat :: random
    natural :: random
    nres :: (random) random
    num :: random
    option :: (random) random
    phantom :: (typerep, random) random
    prod :: (random, random) random
    ptr :: ({llvm_rep,typerep}) random
    rat :: random
    real :: random
    rptr :: (random) random
    sep_lifter_ext :: ({term_of,equal,random,unique_zero_sep_algebra}, {term_of,equal,random}, random, {term_of,equal,random,unique_zero_sep_algebra}, {term_of,equal,random}, random, random) random
    set :: (random) random
    sum :: (random, random) random
    tsa_opt :: (random) random
    tuple_isomorphism :: ({term_of,equal,random}, random, random) random
    unit :: random
    va_item :: random
    val :: (random) random
    vstruct :: (random) random
    word :: ({len0,typerep}) random

class real_algebra:
  supersort: {real_vector,ring}
  instances:
    complex :: real_algebra
    real :: real_algebra

class real_algebra_1:
  supersort: {ring_char_0,real_algebra}
  instances:
    complex :: real_algebra_1
    real :: real_algebra_1

class real_div_algebra:
  supersort: {division_ring,real_algebra_1}
  instances:
    complex :: real_div_algebra
    real :: real_div_algebra

class real_field:
  supersort: {field_char_0,real_div_algebra}
  instances:
    complex :: real_field
    real :: real_field

class real_normed_algebra:
  supersort: {topological_semigroup_mult,real_algebra,real_normed_vector}
  instances:
    complex :: real_normed_algebra
    real :: real_normed_algebra

class real_normed_algebra_1:
  supersort: {real_algebra_1,real_normed_algebra,perfect_space}
  instances:
    complex :: real_normed_algebra_1
    real :: real_normed_algebra_1

class real_normed_div_algebra:
  supersort: {real_div_algebra,real_normed_algebra_1}
  instances:
    complex :: real_normed_div_algebra
    real :: real_normed_div_algebra

class real_normed_field:
  supersort: {comm_real_normed_algebra_1,real_field,real_normed_div_algebra}
  instances:
    complex :: real_normed_field
    real :: real_normed_field

class real_normed_vector:
  supersort: {topological_ab_group_add,dist_norm,metric_space,real_vector,sgn_div_norm}
  instances:
    complex :: real_normed_vector
    real :: real_normed_vector

class real_vector:
  supersort: {ab_group_add,scaleR}
  instances:
    complex :: real_vector
    real :: real_vector

class ring:
  supersort: {ab_group_add,semiring_0_cancel}
  instances:
    Enum.finite_1 :: ring
    Enum.finite_2 :: ring
    Enum.finite_3 :: ring
    bit :: ring
    bit0 :: (finite) ring
    bit1 :: (finite) ring
    complex :: ring
    int :: ring
    integer :: ring
    1 :: ring
    rat :: ring
    real :: ring
    word :: (len0) ring

class ring_1:
  supersort: {neg_numeral,ring,semiring_1_cancel}
  instances:
    Enum.finite_2 :: ring_1
    Enum.finite_3 :: ring_1
    bit :: ring_1
    bit0 :: (finite) ring_1
    bit1 :: (finite) ring_1
    complex :: ring_1
    int :: ring_1
    integer :: ring_1
    rat :: ring_1
    real :: ring_1
    word :: (len) ring_1

class ring_1_no_zero_divisors:
  supersort: {ring_1,ring_no_zero_divisors,semiring_1_no_zero_divisors}
  instances:
    Enum.finite_2 :: ring_1_no_zero_divisors
    Enum.finite_3 :: ring_1_no_zero_divisors
    bit :: ring_1_no_zero_divisors
    complex :: ring_1_no_zero_divisors
    int :: ring_1_no_zero_divisors
    integer :: ring_1_no_zero_divisors
    rat :: ring_1_no_zero_divisors
    real :: ring_1_no_zero_divisors

class ring_char_0:
  supersort: {semiring_char_0,ring_1}
  instances:
    complex :: ring_char_0
    int :: ring_char_0
    integer :: ring_char_0
    rat :: ring_char_0
    real :: ring_char_0

class ring_gcd:
  supersort: {semiring_gcd,comm_ring_1}
  instances:
    int :: ring_gcd

class ring_no_zero_divisors:
  supersort: {ring,semiring_no_zero_divisors_cancel}
  instances:
    Enum.finite_1 :: ring_no_zero_divisors
    Enum.finite_2 :: ring_no_zero_divisors
    Enum.finite_3 :: ring_no_zero_divisors
    bit :: ring_no_zero_divisors
    complex :: ring_no_zero_divisors
    int :: ring_no_zero_divisors
    integer :: ring_no_zero_divisors
    rat :: ring_no_zero_divisors
    real :: ring_no_zero_divisors

class ring_parity:
  supersort: {semiring_parity,comm_ring_1}
  instances:
    int :: ring_parity
    integer :: ring_parity

class scaleR:
  supersort: type
  parameters:
    scaleR :: real \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    complex :: scaleR
    real :: scaleR

class semidom:
  supersort: {comm_semiring_1_cancel,semiring_1_no_zero_divisors}
  instances:
    Enum.finite_2 :: semidom
    Enum.finite_3 :: semidom
    bit :: semidom
    complex :: semidom
    int :: semidom
    integer :: semidom
    nat :: semidom
    natural :: semidom
    rat :: semidom
    real :: semidom

class semidom_divide:
  supersort: {divide,semidom,semiring_no_zero_divisors_cancel}
  instances:
    Enum.finite_2 :: semidom_divide
    Enum.finite_3 :: semidom_divide
    bit :: semidom_divide
    complex :: semidom_divide
    int :: semidom_divide
    integer :: semidom_divide
    nat :: semidom_divide
    natural :: semidom_divide
    rat :: semidom_divide
    real :: semidom_divide

class semidom_divide_unit_factor:
  supersort: {semidom_divide,unit_factor}
  instances:
    Enum.finite_2 :: semidom_divide_unit_factor
    Enum.finite_3 :: semidom_divide_unit_factor
    int :: semidom_divide_unit_factor
    nat :: semidom_divide_unit_factor

class semidom_modulo:
  supersort: {algebraic_semidom,semiring_modulo}
  instances:
    Enum.finite_2 :: semidom_modulo
    Enum.finite_3 :: semidom_modulo
    int :: semidom_modulo
    integer :: semidom_modulo
    nat :: semidom_modulo
    natural :: semidom_modulo

class semigroup_add:
  supersort: plus
  instances:
    Enum.finite_1 :: semigroup_add
    Enum.finite_2 :: semigroup_add
    Enum.finite_3 :: semigroup_add
    String.literal :: semigroup_add
    bit :: semigroup_add
    bit0 :: (finite) semigroup_add
    bit1 :: (finite) semigroup_add
    complex :: semigroup_add
    int :: semigroup_add
    integer :: semigroup_add
    multiset :: (type) semigroup_add
    nat :: semigroup_add
    natural :: semigroup_add
    1 :: semigroup_add
    rat :: semigroup_add
    real :: semigroup_add
    word :: (len0) semigroup_add

class semigroup_mult:
  supersort: times
  instances:
    Enum.finite_1 :: semigroup_mult
    Enum.finite_2 :: semigroup_mult
    Enum.finite_3 :: semigroup_mult
    bit :: semigroup_mult
    bit0 :: (finite) semigroup_mult
    bit1 :: (finite) semigroup_mult
    complex :: semigroup_mult
    int :: semigroup_mult
    integer :: semigroup_mult
    nat :: semigroup_mult
    natural :: semigroup_mult
    1 :: semigroup_mult
    rat :: semigroup_mult
    real :: semigroup_mult
    word :: (len0) semigroup_mult

class semilattice_inf:
  supersort: {inf,order}
  instances:
    Enum.finite_1 :: semilattice_inf
    Enum.finite_2 :: semilattice_inf
    Enum.finite_3 :: semilattice_inf
    Enum.finite_4 :: semilattice_inf
    Enum.finite_5 :: semilattice_inf
    Predicate.pred :: (type) semilattice_inf
    bool :: semilattice_inf
    dres :: (type) semilattice_inf
    filter :: (type) semilattice_inf
    fun :: (type, semilattice_inf) semilattice_inf
    int :: semilattice_inf
    nat :: semilattice_inf
    nres :: (type) semilattice_inf
    option :: (semilattice_inf) semilattice_inf
    rat :: semilattice_inf
    real :: semilattice_inf
    set :: (type) semilattice_inf
    unit :: semilattice_inf

class semilattice_sup:
  supersort: {sup,order}
  instances:
    Enum.finite_1 :: semilattice_sup
    Enum.finite_2 :: semilattice_sup
    Enum.finite_3 :: semilattice_sup
    Enum.finite_4 :: semilattice_sup
    Enum.finite_5 :: semilattice_sup
    Predicate.pred :: (type) semilattice_sup
    bool :: semilattice_sup
    dres :: (type) semilattice_sup
    filter :: (type) semilattice_sup
    fun :: (type, semilattice_sup) semilattice_sup
    int :: semilattice_sup
    nat :: semilattice_sup
    nres :: (type) semilattice_sup
    option :: (semilattice_sup) semilattice_sup
    rat :: semilattice_sup
    real :: semilattice_sup
    set :: (type) semilattice_sup
    unit :: semilattice_sup

class semiring:
  supersort: {ab_semigroup_add,semigroup_mult}
  instances:
    Enum.finite_1 :: semiring
    Enum.finite_2 :: semiring
    Enum.finite_3 :: semiring
    bit :: semiring
    bit0 :: (finite) semiring
    bit1 :: (finite) semiring
    complex :: semiring
    int :: semiring
    integer :: semiring
    nat :: semiring
    natural :: semiring
    1 :: semiring
    rat :: semiring
    real :: semiring
    word :: (len0) semiring

class semiring_0:
  supersort: {comm_monoid_add,mult_zero,semiring}
  instances:
    Enum.finite_1 :: semiring_0
    Enum.finite_2 :: semiring_0
    Enum.finite_3 :: semiring_0
    bit :: semiring_0
    bit0 :: (finite) semiring_0
    bit1 :: (finite) semiring_0
    complex :: semiring_0
    int :: semiring_0
    integer :: semiring_0
    nat :: semiring_0
    natural :: semiring_0
    1 :: semiring_0
    rat :: semiring_0
    real :: semiring_0
    word :: (len0) semiring_0

class semiring_0_cancel:
  supersort: {cancel_comm_monoid_add,semiring_0}
  instances:
    Enum.finite_1 :: semiring_0_cancel
    Enum.finite_2 :: semiring_0_cancel
    Enum.finite_3 :: semiring_0_cancel
    bit :: semiring_0_cancel
    bit0 :: (finite) semiring_0_cancel
    bit1 :: (finite) semiring_0_cancel
    complex :: semiring_0_cancel
    int :: semiring_0_cancel
    integer :: semiring_0_cancel
    nat :: semiring_0_cancel
    natural :: semiring_0_cancel
    1 :: semiring_0_cancel
    rat :: semiring_0_cancel
    real :: semiring_0_cancel
    word :: (len0) semiring_0_cancel

class semiring_1:
  supersort: {semiring_numeral,semiring_0,zero_neq_one}
  instances:
    Enum.finite_2 :: semiring_1
    Enum.finite_3 :: semiring_1
    bit :: semiring_1
    bit0 :: (finite) semiring_1
    bit1 :: (finite) semiring_1
    complex :: semiring_1
    int :: semiring_1
    integer :: semiring_1
    nat :: semiring_1
    natural :: semiring_1
    rat :: semiring_1
    real :: semiring_1
    word :: (len) semiring_1

class semiring_1_cancel:
  supersort: {semiring_0_cancel,semiring_1}
  instances:
    Enum.finite_2 :: semiring_1_cancel
    Enum.finite_3 :: semiring_1_cancel
    bit :: semiring_1_cancel
    bit0 :: (finite) semiring_1_cancel
    bit1 :: (finite) semiring_1_cancel
    complex :: semiring_1_cancel
    int :: semiring_1_cancel
    integer :: semiring_1_cancel
    nat :: semiring_1_cancel
    natural :: semiring_1_cancel
    rat :: semiring_1_cancel
    real :: semiring_1_cancel
    word :: (len) semiring_1_cancel

class semiring_1_no_zero_divisors:
  supersort: {semiring_1,semiring_no_zero_divisors}
  instances:
    Enum.finite_2 :: semiring_1_no_zero_divisors
    Enum.finite_3 :: semiring_1_no_zero_divisors
    bit :: semiring_1_no_zero_divisors
    complex :: semiring_1_no_zero_divisors
    int :: semiring_1_no_zero_divisors
    integer :: semiring_1_no_zero_divisors
    nat :: semiring_1_no_zero_divisors
    natural :: semiring_1_no_zero_divisors
    rat :: semiring_1_no_zero_divisors
    real :: semiring_1_no_zero_divisors

class semiring_Gcd:
  supersort: {Gcd,semiring_gcd}
  instances:
    int :: semiring_Gcd
    nat :: semiring_Gcd

class semiring_char_0:
  supersort: semiring_1
  instances:
    complex :: semiring_char_0
    int :: semiring_char_0
    integer :: semiring_char_0
    nat :: semiring_char_0
    natural :: semiring_char_0
    rat :: semiring_char_0
    real :: semiring_char_0

class semiring_gcd:
  supersort: {gcd,normalization_semidom}
  instances:
    int :: semiring_gcd
    nat :: semiring_gcd

class semiring_modulo:
  supersort: {comm_semiring_1_cancel,modulo}
  instances:
    Enum.finite_2 :: semiring_modulo
    Enum.finite_3 :: semiring_modulo
    int :: semiring_modulo
    integer :: semiring_modulo
    nat :: semiring_modulo
    natural :: semiring_modulo

class semiring_no_zero_divisors:
  supersort: semiring_0
  instances:
    Enum.finite_1 :: semiring_no_zero_divisors
    Enum.finite_2 :: semiring_no_zero_divisors
    Enum.finite_3 :: semiring_no_zero_divisors
    bit :: semiring_no_zero_divisors
    complex :: semiring_no_zero_divisors
    int :: semiring_no_zero_divisors
    integer :: semiring_no_zero_divisors
    nat :: semiring_no_zero_divisors
    natural :: semiring_no_zero_divisors
    rat :: semiring_no_zero_divisors
    real :: semiring_no_zero_divisors

class semiring_no_zero_divisors_cancel:
  supersort: semiring_no_zero_divisors
  instances:
    Enum.finite_1 :: semiring_no_zero_divisors_cancel
    Enum.finite_2 :: semiring_no_zero_divisors_cancel
    Enum.finite_3 :: semiring_no_zero_divisors_cancel
    bit :: semiring_no_zero_divisors_cancel
    complex :: semiring_no_zero_divisors_cancel
    int :: semiring_no_zero_divisors_cancel
    integer :: semiring_no_zero_divisors_cancel
    nat :: semiring_no_zero_divisors_cancel
    natural :: semiring_no_zero_divisors_cancel
    rat :: semiring_no_zero_divisors_cancel
    real :: semiring_no_zero_divisors_cancel

class semiring_numeral:
  supersort: {monoid_mult,numeral,semiring}
  instances:
    Enum.finite_2 :: semiring_numeral
    Enum.finite_3 :: semiring_numeral
    bit :: semiring_numeral
    bit0 :: (finite) semiring_numeral
    bit1 :: (finite) semiring_numeral
    complex :: semiring_numeral
    int :: semiring_numeral
    integer :: semiring_numeral
    nat :: semiring_numeral
    natural :: semiring_numeral
    rat :: semiring_numeral
    real :: semiring_numeral
    word :: (len) semiring_numeral

class semiring_parity:
  supersort: {unique_euclidean_semiring,semiring_char_0}
  instances:
    int :: semiring_parity
    integer :: semiring_parity
    nat :: semiring_parity
    natural :: semiring_parity

class sep_algebra:
  supersort: pre_sep_algebra
  instances:
    aval :: (type) sep_algebra
    fun :: (type, stronger_sep_algebra) sep_algebra
    llvm_amemory :: sep_algebra
    option :: (stronger_sep_algebra) sep_algebra
    prod :: (stronger_sep_algebra, stronger_sep_algebra) sep_algebra
    tsa_opt :: (type) sep_algebra

class sgn:
  supersort: type
  parameters:
    sgn :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: sgn
    Enum.finite_2 :: sgn
    Enum.finite_3 :: sgn
    complex :: sgn
    int :: sgn
    integer :: sgn
    rat :: sgn
    real :: sgn

class sgn_div_norm:
  supersort: {sgn,norm,scaleR}
  instances:
    complex :: sgn_div_norm
    real :: sgn_div_norm

class signed_div:
  supersort: type
  parameters:
    sdiv :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
    smod :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    int :: signed_div
    lint :: signed_div
    word :: (len) signed_div

class size:
  supersort: type
  parameters:
    size :: 'a \<Rightarrow> nat
  instances:
    ??.Lenses.test :: (type) size
    M :: (type, type, type, type) size
    String.literal :: size
    addr :: (type) size
    baddr :: (type) size
    char :: size
    dres :: (type) size
    elens :: (type, type, type) size
    err :: size
    lens :: (type, type) size
    list :: (type) size
    llvm_amemory :: size
    llvm_memory :: size
    llvm_primval :: size
    llvm_primval_struct :: size
    llvm_ptr :: size
    llvm_val :: size
    llvm_vstruct :: size
    memory :: (type) size
    mres :: (type, type, type, type) size
    multiset :: (type) size
    nat :: size
    natural :: size
    nres :: (type) size
    num :: size
    option :: (type) size
    phantom :: (type, type) size
    prod :: (type, type) size
    ptr :: (llvm_rep) size
    rptr :: (type) size
    sum :: (type, type) size
    tsa_opt :: (type) size
    tuple_isomorphism :: (type, type, type) size
    typerep :: size
    va_item :: size
    val :: (type) size
    vstruct :: (type) size
    word :: (len0) size

class small_lazy:
  supersort: type
  parameters:
    small_lazy :: natural \<Rightarrow> 'a lazy_sequence
  instances:
    int :: small_lazy
    list :: (small_lazy) small_lazy
    prod :: (small_lazy, small_lazy) small_lazy
    unit :: small_lazy

class strict_ordered_ab_semigroup_add:
  supersort: ordered_ab_semigroup_add
  instances:
    Enum.finite_1 :: strict_ordered_ab_semigroup_add
    int :: strict_ordered_ab_semigroup_add
    integer :: strict_ordered_ab_semigroup_add
    nat :: strict_ordered_ab_semigroup_add
    natural :: strict_ordered_ab_semigroup_add
    rat :: strict_ordered_ab_semigroup_add
    real :: strict_ordered_ab_semigroup_add

class strict_ordered_comm_monoid_add:
  supersort: {comm_monoid_add,strict_ordered_ab_semigroup_add}
  instances:
    Enum.finite_1 :: strict_ordered_comm_monoid_add
    int :: strict_ordered_comm_monoid_add
    integer :: strict_ordered_comm_monoid_add
    nat :: strict_ordered_comm_monoid_add
    natural :: strict_ordered_comm_monoid_add
    rat :: strict_ordered_comm_monoid_add
    real :: strict_ordered_comm_monoid_add

class stronger_sep_algebra:
  supersort: sep_algebra
  instances:
    aval :: (type) stronger_sep_algebra
    fun :: (type, stronger_sep_algebra) stronger_sep_algebra
    llvm_amemory :: stronger_sep_algebra
    option :: (stronger_sep_algebra) stronger_sep_algebra
    prod :: (stronger_sep_algebra, stronger_sep_algebra) stronger_sep_algebra
    tsa_opt :: (type) stronger_sep_algebra

class sup:
  supersort: type
  parameters:
    sup :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: sup
    Enum.finite_2 :: sup
    Enum.finite_3 :: sup
    Enum.finite_4 :: sup
    Enum.finite_5 :: sup
    Predicate.pred :: (type) sup
    bool :: sup
    dres :: (type) sup
    filter :: (type) sup
    fun :: (type, semilattice_sup) sup
    int :: sup
    nat :: sup
    nres :: (type) sup
    option :: (sup) sup
    rat :: sup
    real :: sup
    set :: (type) sup
    unit :: sup

class t0_space:
  supersort: topological_space
  instances:
    bool :: t0_space
    complex :: t0_space
    int :: t0_space
    nat :: t0_space
    prod :: (t0_space, t0_space) t0_space
    real :: t0_space

class t1_space:
  supersort: t0_space
  instances:
    bool :: t1_space
    complex :: t1_space
    int :: t1_space
    nat :: t1_space
    prod :: (t1_space, t1_space) t1_space
    real :: t1_space

class t2_space:
  supersort: t1_space
  instances:
    bool :: t2_space
    complex :: t2_space
    int :: t2_space
    nat :: t2_space
    prod :: (t2_space, t2_space) t2_space
    real :: t2_space

class t3_space:
  supersort: t2_space

class t4_space:
  supersort: t3_space

class term_of:
  supersort: typerep
  parameters:
    term_of_class.term_of :: 'a \<Rightarrow> term
  instances:
    ??.Lenses.test :: (typerep) term_of
    ??.Quickcheck_Narrowing.narrowing_cons :: (typerep) term_of
    ??.Quickcheck_Narrowing.narrowing_term :: term_of
    ??.Quickcheck_Narrowing.narrowing_type :: term_of
    ??.Quickcheck_Narrowing.property :: term_of
    Enum.finite_1 :: term_of
    Enum.finite_2 :: term_of
    Enum.finite_3 :: term_of
    Enum.finite_4 :: term_of
    Enum.finite_5 :: term_of
    M :: (typerep, typerep, typerep, typerep) term_of
    Predicate.pred :: (typerep) term_of
    Predicate.seq :: (typerep) term_of
    Quickcheck_Exhaustive.three_valued :: (typerep) term_of
    Quickcheck_Exhaustive.unknown :: (typerep) term_of
    Quickcheck_Narrowing.cfun :: (typerep) term_of
    Quickcheck_Narrowing.ffun :: (typerep, typerep) term_of
    String.literal :: term_of
    addr :: (typerep) term_of
    aval :: (typerep) term_of
    baddr :: (typerep) term_of
    bit :: term_of
    bit0 :: (typerep) term_of
    bit1 :: (typerep) term_of
    bool :: term_of
    char :: term_of
    complex :: term_of
    dr_assn :: (typerep, typerep) term_of
    dres :: (typerep) term_of
    elens :: (typerep, typerep, typerep) term_of
    err :: term_of
    filter :: (typerep) term_of
    fun :: (typerep, typerep) term_of
    int :: term_of
    integer :: term_of
    itself :: (typerep) term_of
    lazy_sequence :: (typerep) term_of
    lens :: (typerep, typerep) term_of
    lint :: term_of
    list :: (typerep) term_of
    llvm_amemory :: term_of
    llvm_memory :: term_of
    llvm_primval :: term_of
    llvm_primval_struct :: term_of
    llvm_ptr :: term_of
    llvm_val :: term_of
    llvm_vstruct :: term_of
    memory :: (typerep) term_of
    mres :: (typerep, typerep, typerep, typerep) term_of
    multiset :: (typerep) term_of
    nat :: term_of
    natural :: term_of
    nres :: (typerep) term_of
    num :: term_of
    0 :: term_of
    1 :: term_of
    option :: (typerep) term_of
    phantom :: (typerep, typerep) term_of
    prod :: (typerep, typerep) term_of
    ptr :: (typerep) term_of
    rat :: term_of
    real :: term_of
    rptr :: (typerep) term_of
    sep_lifter_ext :: (typerep, typerep, typerep, typerep, typerep, typerep, typerep) term_of
    set :: (typerep) term_of
    sum :: (typerep, typerep) term_of
    sumbool :: term_of
    term :: term_of
    tsa_opt :: (typerep) term_of
    tuple_isomorphism :: (typerep, typerep, typerep) term_of
    typerep :: term_of
    unit :: term_of
    va_item :: term_of
    val :: (typerep) term_of
    vstruct :: (typerep) term_of
    word :: (typerep) term_of

class this_addr:
  supersort: type
  parameters:
    this_addr :: 'a
  instances:
    baddr :: (this_addr) this_addr
    list :: (type) this_addr
    this_addr_witness :: this_addr

class times:
  supersort: type
  parameters:
    times :: 'a \<Rightarrow> 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: times
    Enum.finite_2 :: times
    Enum.finite_3 :: times
    bit :: times
    bit0 :: (finite) times
    bit1 :: (finite) times
    complex :: times
    int :: times
    integer :: times
    lint :: times
    nat :: times
    natural :: times
    num :: times
    1 :: times
    rat :: times
    real :: times
    word :: (len0) times

class top:
  supersort: type
  parameters:
    top :: 'a
  instances:
    Enum.finite_1 :: top
    Enum.finite_2 :: top
    Enum.finite_3 :: top
    Enum.finite_4 :: top
    Enum.finite_5 :: top
    Predicate.pred :: (type) top
    bool :: top
    dres :: (type) top
    filter :: (type) top
    fun :: (type, top) top
    nres :: (type) top
    option :: (order_top) top
    set :: (type) top
    unit :: top

class topological_ab_group_add:
  supersort: {ab_group_add,topological_comm_monoid_add,topological_group_add}
  instances:
    complex :: topological_ab_group_add
    real :: topological_ab_group_add

class topological_comm_monoid_add:
  supersort: {comm_monoid_add,topological_monoid_add}
  instances:
    complex :: topological_comm_monoid_add
    int :: topological_comm_monoid_add
    nat :: topological_comm_monoid_add
    real :: topological_comm_monoid_add

class topological_comm_monoid_mult:
  supersort: {comm_monoid_mult,topological_monoid_mult}
  instances:
    int :: topological_comm_monoid_mult
    nat :: topological_comm_monoid_mult

class topological_group_add:
  supersort: {group_add,topological_monoid_add}
  instances:
    complex :: topological_group_add
    real :: topological_group_add

class topological_monoid_add:
  supersort: {monoid_add,topological_space}
  instances:
    complex :: topological_monoid_add
    int :: topological_monoid_add
    nat :: topological_monoid_add
    real :: topological_monoid_add

class topological_monoid_mult:
  supersort: {monoid_mult,topological_semigroup_mult}
  instances:
    int :: topological_monoid_mult
    nat :: topological_monoid_mult

class topological_semigroup_mult:
  supersort: {semigroup_mult,topological_space}
  instances:
    complex :: topological_semigroup_mult
    int :: topological_semigroup_mult
    nat :: topological_semigroup_mult
    real :: topological_semigroup_mult

class topological_space:
  supersort: open
  instances:
    bool :: topological_space
    complex :: topological_space
    int :: topological_space
    nat :: topological_space
    prod :: (topological_space, topological_space) topological_space
    real :: topological_space

class type:
  supersort: {}
  instances:
    ??.Lenses.test :: (type) type
    ??.Lenses.test.test_IITN_test :: (type) type
    ??.Lenses.test.test_pre_test :: (type) type
    ??.Quickcheck_Narrowing.narrowing_cons :: (type) type
    ??.Quickcheck_Narrowing.narrowing_term :: type
    ??.Quickcheck_Narrowing.narrowing_type :: type
    ??.Quickcheck_Narrowing.property :: type
    Enum.finite_1 :: type
    Enum.finite_2 :: type
    Enum.finite_3 :: type
    Enum.finite_4 :: type
    Enum.finite_5 :: type
    M :: (type, type, type, type) type
    M.M_IITN_M :: (type, type, type, type) type
    M_pre_M :: (type, type, type, type) type
    Mpat_Antiquot.sort :: type
    Mpat_Antiquot.term_struct :: type
    Mpat_Antiquot.typ_struct :: type
    Nitpick.bisim_iterator :: type
    Nitpick.fun_box :: (type, type) type
    Nitpick.pair_box :: (type, type) type
    Nitpick.signed_bit :: type
    Nitpick.unsigned_bit :: type
    Nitpick.word :: (type) type
    Predicate.pred :: (type) type
    Predicate.seq :: (type) type
    Quickcheck_Exhaustive.three_valued :: (type) type
    Quickcheck_Exhaustive.unknown :: (type) type
    Quickcheck_Narrowing.cfun :: (type) type
    Quickcheck_Narrowing.ffun :: (type, type) type
    SMT.pattern :: type
    SMT.symb_list :: (type) type
    String.literal :: type
    addr :: (type) type
    addr.addr_IITN_addr :: (type) type
    annot :: type
    aval :: (type) type
    baddr :: (type) type
    baddr.baddr_IITN_baddr :: (type) type
    bit :: type
    bit0 :: (type) type
    bit1 :: (type) type
    bool :: type
    cfun.cfun_IITN_cfun :: (type) type
    char :: type
    char.char_IITN_char :: type
    char_pre_char :: type
    complex :: type
    dr_assn :: (type, type) type
    dres :: (type) type
    dres.dres_IITN_dres :: (type) type
    elens :: (type, type, type) type
    elens.elens_IITN_elens :: (type, type, type) type
    elens_pre_elens :: (type, type, type) type
    elens_pre_elens_bdT :: (type, type) type
    err :: type
    err.err_IITN_err :: type
    err_pre_err :: type
    ffun.ffun_IITN_ffun :: (type, type) type
    ffun_pre_ffun :: (type, type, type) type
    filter :: (type) type
    finite_1.finite_1_IITN_finite_1 :: type
    finite_2.finite_2_IITN_finite_2 :: type
    finite_3.finite_3_IITN_finite_3 :: type
    finite_4.finite_4_IITN_finite_4 :: type
    finite_4_pre_finite_4 :: type
    finite_5.finite_5_IITN_finite_5 :: type
    finite_5_pre_finite_5 :: type
    fun :: (type, type) type
    fun_box.fun_box_IITN_fun_box :: (type, type) type
    i_map :: (type, type) type
    ind :: type
    int :: type
    integer :: type
    interface :: type
    itself :: (type) type
    lazy_sequence :: (type) type
    lazy_sequence.lazy_sequence_IITN_lazy_sequence :: (type) type
    lens :: (type, type) type
    lens.lens_IITN_lens :: (type, type) type
    lens_pre_lens :: (type, type) type
    lens_pre_lens_bdT :: (type, type) type
    lint :: type
    list :: (type) type
    list.list_IITN_list :: (type) type
    llvm_amemory :: type
    llvm_amemory.llvm_amemory_IITN_llvm_amemory :: type
    llvm_amemory_pre_llvm_amemory :: type
    llvm_memory :: type
    llvm_memory.llvm_memory_IITN_llvm_memory :: type
    llvm_primval :: type
    llvm_primval.llvm_primval_IITN_llvm_primval :: type
    llvm_primval_pre_llvm_primval :: type
    llvm_primval_struct :: type
    llvm_primval_struct.llvm_primval_struct_IITN_llvm_primval_struct :: type
    llvm_ptr :: type
    llvm_ptr.llvm_ptr_IITN_llvm_ptr :: type
    llvm_val :: type
    llvm_val.llvm_val_IITN_llvm_val :: type
    llvm_vstruct :: type
    llvm_vstruct.llvm_vstruct_IITN_llvm_vstruct :: type
    memory :: (type) type
    memory.memory_IITN_memory :: (type) type
    mres :: (type, type, type, type) type
    mres.mres_IITN_mres :: (type, type, type, type) type
    mres_pre_mres :: (type, type, type, type) type
    multiset :: (type) type
    narrowing_cons.narrowing_cons_IITN_narrowing_cons :: (type) type
    narrowing_cons_pre_narrowing_cons :: (type) type
    narrowing_term.narrowing_term_IITN_narrowing_term :: type
    narrowing_term_pre_narrowing_term :: (type) type
    narrowing_type.narrowing_type_IITN_narrowing_type :: type
    nat :: type
    natural :: type
    nres :: (type) type
    nres.nres_IITN_nres :: (type) type
    num :: type
    num.num_IITN_num :: type
    0 :: type
    1 :: type
    option :: (type) type
    option.option_IITN_option :: (type) type
    pair_box.pair_box_IITN_pair_box :: (type, type) type
    phantom :: (type, type) type
    phantom.phantom_IITN_phantom :: (type, type) type
    phantom_pre_phantom :: (type, type, type) type
    pred.pred_IITN_pred :: (type) type
    prod :: (type, type) type
    property.property_IITN_property :: type
    property_pre_property :: (type) type
    property_pre_property_bdT :: type
    ptr :: (type) type
    ptr.ptr_IITN_ptr :: (type) type
    ptr_pre_ptr :: (type, type) type
    rat :: type
    real :: type
    rel_name :: type
    rptr :: (type) type
    rptr.rptr_IITN_rptr :: (type) type
    sep_lifter_ext :: (type, type, type, type, type, type, type) type
    seq.seq_IITN_seq :: (type) type
    seq_pre_seq :: (type, type) type
    set :: (type) type
    signed :: (type) type
    sum :: (type, type) type
    sumbool :: type
    sumbool.sumbool_IITN_sumbool :: type
    term :: type
    term.term_IITN_term :: type
    this_addr_witness :: type
    three_valued.three_valued_IITN_three_valued :: (type) type
    tsa_opt :: (type) type
    tsa_opt.tsa_opt_IITN_tsa_opt :: (type) type
    tuple_isomorphism :: (type, type, type) type
    tuple_isomorphism.tuple_isomorphism_IITN_tuple_isomorphism :: (type, type, type) type
    tuple_isomorphism_pre_tuple_isomorphism :: (type, type, type) type
    typerep :: type
    typerep.typerep_IITN_typerep :: type
    unit :: type
    unknown.unknown_IITN_unknown :: (type) type
    va_item :: type
    va_item.va_item_IITN_va_item :: type
    val :: (type) type
    val.val_IITN_val :: (type) type
    vstruct :: (type) type
    vstruct.vstruct_IITN_vstruct :: (type) type
    word :: (type) type
    word.word_IITN_word :: (type) type

class typerep:
  supersort: type
  parameters:
    typerep_class.typerep :: 'a itself \<Rightarrow> typerep
  instances:
    ??.Lenses.test :: (typerep) typerep
    ??.Lenses.test.test_IITN_test :: (typerep) typerep
    ??.Lenses.test.test_pre_test :: (typerep) typerep
    ??.Quickcheck_Narrowing.narrowing_cons :: (typerep) typerep
    ??.Quickcheck_Narrowing.narrowing_term :: typerep
    ??.Quickcheck_Narrowing.narrowing_type :: typerep
    ??.Quickcheck_Narrowing.property :: typerep
    Enum.finite_1 :: typerep
    Enum.finite_2 :: typerep
    Enum.finite_3 :: typerep
    Enum.finite_4 :: typerep
    Enum.finite_5 :: typerep
    M :: (typerep, typerep, typerep, typerep) typerep
    M.M_IITN_M :: (typerep, typerep, typerep, typerep) typerep
    M_pre_M :: (typerep, typerep, typerep, typerep) typerep
    Nitpick.fun_box :: (typerep, typerep) typerep
    Nitpick.pair_box :: (typerep, typerep) typerep
    Nitpick.word :: (typerep) typerep
    Predicate.pred :: (typerep) typerep
    Predicate.seq :: (typerep) typerep
    Quickcheck_Exhaustive.three_valued :: (typerep) typerep
    Quickcheck_Exhaustive.unknown :: (typerep) typerep
    Quickcheck_Narrowing.cfun :: (typerep) typerep
    Quickcheck_Narrowing.ffun :: (typerep, typerep) typerep
    String.literal :: typerep
    addr :: (typerep) typerep
    addr.addr_IITN_addr :: (typerep) typerep
    aval :: (typerep) typerep
    baddr :: (typerep) typerep
    baddr.baddr_IITN_baddr :: (typerep) typerep
    bit :: typerep
    bit0 :: (typerep) typerep
    bit1 :: (typerep) typerep
    bool :: typerep
    cfun.cfun_IITN_cfun :: (typerep) typerep
    char :: typerep
    char.char_IITN_char :: typerep
    char_pre_char :: typerep
    complex :: typerep
    dr_assn :: (typerep, typerep) typerep
    dres :: (typerep) typerep
    dres.dres_IITN_dres :: (typerep) typerep
    elens :: (typerep, typerep, typerep) typerep
    elens.elens_IITN_elens :: (typerep, typerep, typerep) typerep
    elens_pre_elens :: (typerep, typerep, typerep) typerep
    elens_pre_elens_bdT :: (typerep, typerep) typerep
    err :: typerep
    err.err_IITN_err :: typerep
    err_pre_err :: typerep
    ffun.ffun_IITN_ffun :: (typerep, typerep) typerep
    ffun_pre_ffun :: (typerep, typerep, typerep) typerep
    filter :: (typerep) typerep
    finite_1.finite_1_IITN_finite_1 :: typerep
    finite_2.finite_2_IITN_finite_2 :: typerep
    finite_3.finite_3_IITN_finite_3 :: typerep
    finite_4.finite_4_IITN_finite_4 :: typerep
    finite_4_pre_finite_4 :: typerep
    finite_5.finite_5_IITN_finite_5 :: typerep
    finite_5_pre_finite_5 :: typerep
    fun :: (typerep, typerep) typerep
    fun_box.fun_box_IITN_fun_box :: (typerep, typerep) typerep
    int :: typerep
    integer :: typerep
    itself :: (typerep) typerep
    lazy_sequence :: (typerep) typerep
    lazy_sequence.lazy_sequence_IITN_lazy_sequence :: (typerep) typerep
    lens :: (typerep, typerep) typerep
    lens.lens_IITN_lens :: (typerep, typerep) typerep
    lens_pre_lens :: (typerep, typerep) typerep
    lens_pre_lens_bdT :: (typerep, typerep) typerep
    lint :: typerep
    list :: (typerep) typerep
    list.list_IITN_list :: (typerep) typerep
    llvm_amemory :: typerep
    llvm_amemory.llvm_amemory_IITN_llvm_amemory :: typerep
    llvm_amemory_pre_llvm_amemory :: typerep
    llvm_memory :: typerep
    llvm_memory.llvm_memory_IITN_llvm_memory :: typerep
    llvm_primval :: typerep
    llvm_primval.llvm_primval_IITN_llvm_primval :: typerep
    llvm_primval_pre_llvm_primval :: typerep
    llvm_primval_struct :: typerep
    llvm_primval_struct.llvm_primval_struct_IITN_llvm_primval_struct :: typerep
    llvm_ptr :: typerep
    llvm_ptr.llvm_ptr_IITN_llvm_ptr :: typerep
    llvm_val :: typerep
    llvm_val.llvm_val_IITN_llvm_val :: typerep
    llvm_vstruct :: typerep
    llvm_vstruct.llvm_vstruct_IITN_llvm_vstruct :: typerep
    memory :: (typerep) typerep
    memory.memory_IITN_memory :: (typerep) typerep
    mres :: (typerep, typerep, typerep, typerep) typerep
    mres.mres_IITN_mres :: (typerep, typerep, typerep, typerep) typerep
    mres_pre_mres :: (typerep, typerep, typerep, typerep) typerep
    multiset :: (typerep) typerep
    narrowing_cons.narrowing_cons_IITN_narrowing_cons :: (typerep) typerep
    narrowing_cons_pre_narrowing_cons :: (typerep) typerep
    narrowing_term.narrowing_term_IITN_narrowing_term :: typerep
    narrowing_term_pre_narrowing_term :: (typerep) typerep
    narrowing_type.narrowing_type_IITN_narrowing_type :: typerep
    nat :: typerep
    natural :: typerep
    nres :: (typerep) typerep
    nres.nres_IITN_nres :: (typerep) typerep
    num :: typerep
    num.num_IITN_num :: typerep
    0 :: typerep
    1 :: typerep
    option :: (typerep) typerep
    option.option_IITN_option :: (typerep) typerep
    pair_box.pair_box_IITN_pair_box :: (typerep, typerep) typerep
    phantom :: (typerep, typerep) typerep
    phantom.phantom_IITN_phantom :: (typerep, typerep) typerep
    phantom_pre_phantom :: (typerep, typerep, typerep) typerep
    pred.pred_IITN_pred :: (typerep) typerep
    prod :: (typerep, typerep) typerep
    property.property_IITN_property :: typerep
    property_pre_property :: (typerep) typerep
    property_pre_property_bdT :: typerep
    ptr :: (typerep) typerep
    ptr.ptr_IITN_ptr :: (typerep) typerep
    ptr_pre_ptr :: (typerep, typerep) typerep
    rat :: typerep
    real :: typerep
    rptr :: (typerep) typerep
    rptr.rptr_IITN_rptr :: (typerep) typerep
    sep_lifter_ext :: (typerep, typerep, typerep, typerep, typerep, typerep, typerep) typerep
    seq.seq_IITN_seq :: (typerep) typerep
    seq_pre_seq :: (typerep, typerep) typerep
    set :: (typerep) typerep
    signed :: (typerep) typerep
    sum :: (typerep, typerep) typerep
    sumbool :: typerep
    sumbool.sumbool_IITN_sumbool :: typerep
    term :: typerep
    term.term_IITN_term :: typerep
    three_valued.three_valued_IITN_three_valued :: (typerep) typerep
    tsa_opt :: (typerep) typerep
    tsa_opt.tsa_opt_IITN_tsa_opt :: (typerep) typerep
    tuple_isomorphism :: (typerep, typerep, typerep) typerep
    tuple_isomorphism.tuple_isomorphism_IITN_tuple_isomorphism :: (typerep, typerep, typerep) typerep
    tuple_isomorphism_pre_tuple_isomorphism :: (typerep, typerep, typerep) typerep
    typerep :: typerep
    typerep.typerep_IITN_typerep :: typerep
    unit :: typerep
    unknown.unknown_IITN_unknown :: (typerep) typerep
    va_item :: typerep
    va_item.va_item_IITN_va_item :: typerep
    val :: (typerep) typerep
    val.val_IITN_val :: (typerep) typerep
    vstruct :: (typerep) typerep
    vstruct.vstruct_IITN_vstruct :: (typerep) typerep
    word :: (typerep) typerep
    word.word_IITN_word :: (typerep) typerep

class uminus:
  supersort: type
  parameters:
    uminus :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_1 :: uminus
    Enum.finite_2 :: uminus
    Enum.finite_3 :: uminus
    Enum.finite_4 :: uminus
    Predicate.pred :: (type) uminus
    bit :: uminus
    bit0 :: (finite) uminus
    bit1 :: (finite) uminus
    bool :: uminus
    complex :: uminus
    fun :: (type, uminus) uminus
    int :: uminus
    integer :: uminus
    lint :: uminus
    1 :: uminus
    rat :: uminus
    real :: uminus
    set :: (type) uminus
    unit :: uminus
    word :: (len0) uminus

class unbounded_dense_linorder:
  supersort: {dense_linorder,no_bot,no_top}
  instances:
    rat :: unbounded_dense_linorder
    real :: unbounded_dense_linorder

class uniform_space:
  supersort: open_uniformity
  instances:
    complex :: uniform_space
    real :: uniform_space

class uniformity:
  supersort: type
  parameters:
    uniformity :: ('a \<times> 'a) filter
  instances:
    complex :: uniformity
    real :: uniformity

class uniformity_dist:
  supersort: {dist,uniformity}
  instances:
    complex :: uniformity_dist
    real :: uniformity_dist

class unique_euclidean_ring:
  supersort: {euclidean_ring_cancel,unique_euclidean_semiring}
  instances:
    int :: unique_euclidean_ring
    integer :: unique_euclidean_ring

class unique_euclidean_semiring:
  supersort: euclidean_semiring_cancel
  parameters:
    division_segment :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_2 :: unique_euclidean_semiring
    Enum.finite_3 :: unique_euclidean_semiring
    int :: unique_euclidean_semiring
    integer :: unique_euclidean_semiring
    nat :: unique_euclidean_semiring
    natural :: unique_euclidean_semiring

class unique_euclidean_semiring_numeral:
  supersort: {semiring_parity,linordered_semidom}
  parameters:
    divmod :: num \<Rightarrow> num \<Rightarrow> 'a \<times> 'a
    divmod_step :: num \<Rightarrow> 'a \<times> 'a \<Rightarrow> 'a \<times> 'a
  instances:
    int :: unique_euclidean_semiring_numeral
    integer :: unique_euclidean_semiring_numeral
    nat :: unique_euclidean_semiring_numeral

class unique_zero_sep_algebra:
  supersort: stronger_sep_algebra
  instances:
    aval :: (type) unique_zero_sep_algebra
    fun :: (type, unique_zero_sep_algebra) unique_zero_sep_algebra
    llvm_amemory :: unique_zero_sep_algebra
    prod :: (unique_zero_sep_algebra, unique_zero_sep_algebra) unique_zero_sep_algebra
    tsa_opt :: (type) unique_zero_sep_algebra

class unit_factor:
  supersort: type
  parameters:
    unit_factor :: 'a \<Rightarrow> 'a
  instances:
    Enum.finite_2 :: unit_factor
    Enum.finite_3 :: unit_factor
    int :: unit_factor
    nat :: unit_factor

class wellorder:
  supersort: linorder
  instances:
    Enum.finite_1 :: wellorder
    Enum.finite_2 :: wellorder
    Enum.finite_3 :: wellorder
    bit0 :: (finite) wellorder
    bit1 :: (finite) wellorder
    nat :: wellorder
    1 :: wellorder
    option :: (wellorder) wellorder
    unit :: wellorder
    word :: (len) wellorder

class zero:
  supersort: type
  parameters:
    zero_class.zero :: 'a
  instances:
    Enum.finite_1 :: zero
    Enum.finite_2 :: zero
    Enum.finite_3 :: zero
    String.literal :: zero
    aval :: (type) zero
    bit :: zero
    bit0 :: (finite) zero
    bit1 :: (finite) zero
    complex :: zero
    fun :: (type, stronger_sep_algebra) zero
    int :: zero
    integer :: zero
    llvm_amemory :: zero
    multiset :: (type) zero
    nat :: zero
    natural :: zero
    1 :: zero
    option :: (stronger_sep_algebra) zero
    prod :: (stronger_sep_algebra, stronger_sep_algebra) zero
    rat :: zero
    real :: zero
    tsa_opt :: (type) zero
    word :: (len0) zero

class zero_less_one:
  supersort: {one,zero,order}
  instances:
    int :: zero_less_one
    integer :: zero_less_one
    nat :: zero_less_one
    natural :: zero_less_one
    rat :: zero_less_one
    real :: zero_less_one

class zero_neq_one:
  supersort: {one,zero}
  instances:
    Enum.finite_2 :: zero_neq_one
    Enum.finite_3 :: zero_neq_one
    bit :: zero_neq_one
    bit0 :: (finite) zero_neq_one
    bit1 :: (finite) zero_neq_one
    complex :: zero_neq_one
    int :: zero_neq_one
    integer :: zero_neq_one
    nat :: zero_neq_one
    natural :: zero_neq_one
    rat :: zero_neq_one
    real :: zero_neq_one
    word :: (len) zero_neq_one