; Generated by Isabelle/LLVM-shallow
target datalayout = "e-m:e-p:64:64:64-a:0:64-n8:16:32:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128"
target triple = "x86_64-pc-linux-gnu"





attributes #0 = { strictfp }

define i64 @euclid(i64 %a, i64 %b) #0 {

  start:
    %xa = insertvalue { i64, i64 } zeroinitializer, i64 %a, 0
    %xaa = insertvalue { i64, i64 } %xa, i64 %b, 1
    br label %while_start

  while_start:
    %xba = phi { i64, i64 } [ %x4, %ctd_if ], [ %xaa, %start ]
    %a1 = extractvalue { i64, i64 } %xba, 0
    %x = extractvalue { i64, i64 } %xba, 1
    %x1 = icmp ne i64 %a1, %x
    br i1 %x1, label %while_body, label %while_end

  while_body:
    %a2 = extractvalue { i64, i64 } %xba, 0
    %b1 = extractvalue { i64, i64 } %xba, 1
    %tmpa = icmp ule i64 %a2, %b1
    br i1 %tmpa, label %then, label %else

  then:
    %xaaa = insertvalue { i64, i64 } zeroinitializer, i64 %a2, 0
    %tmpaaa = sub i64 %b1, %a2
    %x2 = insertvalue { i64, i64 } %xaaa, i64 %tmpaaa, 1
    br label %ctd_if

  else:
    %tmpb = sub i64 %a2, %b1
    %xaaa1 = insertvalue { i64, i64 } zeroinitializer, i64 %tmpb, 0
    %x3 = insertvalue { i64, i64 } %xaaa1, i64 %b1, 1
    br label %ctd_if

  ctd_if:
    %x4 = phi { i64, i64 } [ %x3, %else ], [ %x2, %then ]
    br label %while_start

  while_end:
    %a3 = extractvalue { i64, i64 } %xba, 0
    %b2 = extractvalue { i64, i64 } %xba, 1
    ret i64 %a3
}
